// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Fri, 01 Jul 2022 17:44:37 CEST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package altcapi

/*
#cgo LDFLAGS: -lcapi -ldl
#include "./build/out/capi.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import (
	"runtime"
	"unsafe"
)

// Load_module function as declared in out/capi.h:25
func Load_module(path string) int32 {
	cpath, cpathAllocMap := unpackPCharString(path)
	__ret := C.load_module(cpath)
	runtime.KeepAlive(cpathAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_type function as declared in out/capi.h:264
func Blip_get_type(c unsafe.Pointer) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.blip_get_type(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_has_meta_data function as declared in out/capi.h:265
func Blip_has_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.blip_has_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_meta_data function as declared in out/capi.h:266
func Blip_get_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.blip_get_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Blip_set_meta_data function as declared in out/capi.h:267
func Blip_set_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.blip_set_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Blip_delete_meta_data function as declared in out/capi.h:268
func Blip_delete_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.blip_delete_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Blip_destroy function as declared in out/capi.h:269
func Blip_destroy(b unsafe.Pointer) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	C.blip_destroy(cb)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_is_valid function as declared in out/capi.h:270
func Blip_is_valid(resourceName string, p unsafe.Pointer) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.blip_is_valid(cresourceName, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_position function as declared in out/capi.h:271
func Blip_get_position(p unsafe.Pointer) Position {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.blip_get_position(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewPositionRef(unsafe.Pointer(&__ret))
	return __v
}

// Blip_set_position function as declared in out/capi.h:272
func Blip_set_position(p unsafe.Pointer, x float32, y float32, z float32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	C.blip_set_position(cp, cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Blip_get_dimension function as declared in out/capi.h:273
func Blip_get_dimension(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.blip_get_dimension(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_set_dimension function as declared in out/capi.h:274
func Blip_set_dimension(p unsafe.Pointer, dimension int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cdimension, cdimensionAllocMap := (C.long)(dimension), cgoAllocsUnknown
	C.blip_set_dimension(cp, cdimension)
	runtime.KeepAlive(cdimensionAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Blip_is_global function as declared in out/capi.h:275
func Blip_is_global(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_is_global(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_target function as declared in out/capi.h:276
func Blip_get_target(b unsafe.Pointer) unsafe.Pointer {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_target(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Blip_is_attached function as declared in out/capi.h:277
func Blip_is_attached(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_is_attached(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_attached_to function as declared in out/capi.h:278
func Blip_attached_to(b unsafe.Pointer) Entity {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_attached_to(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := *NewEntityRef(unsafe.Pointer(&__ret))
	return __v
}

// Blip_attach_to function as declared in out/capi.h:279
func Blip_attach_to(b unsafe.Pointer, e Entity) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	ce, ceAllocMap := e.PassValue()
	C.blip_attach_to(cb, ce)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_get_blip_type function as declared in out/capi.h:280
func Blip_get_blip_type(b unsafe.Pointer) byte {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_blip_type(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (byte)(__ret)
	return __v
}

// Blip_get_scale_x_y function as declared in out/capi.h:281
func Blip_get_scale_x_y(b unsafe.Pointer) Vector2 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_scale_x_y(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := *NewVector2Ref(unsafe.Pointer(&__ret))
	return __v
}

// Blip_set_scale_x_y function as declared in out/capi.h:282
func Blip_set_scale_x_y(b unsafe.Pointer, scale Vector2) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cscale, cscaleAllocMap := scale.PassValue()
	C.blip_set_scale_x_y(cb, cscale)
	runtime.KeepAlive(cscaleAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_get_display function as declared in out/capi.h:283
func Blip_get_display(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_display(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_set_display function as declared in out/capi.h:284
func Blip_set_display(b unsafe.Pointer, display int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cdisplay, cdisplayAllocMap := (C.int)(display), cgoAllocsUnknown
	C.blip_set_display(cb, cdisplay)
	runtime.KeepAlive(cdisplayAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_get_sprite function as declared in out/capi.h:285
func Blip_get_sprite(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_sprite(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_color function as declared in out/capi.h:286
func Blip_get_color(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_color(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_secondary_color function as declared in out/capi.h:287
func Blip_get_secondary_color(b unsafe.Pointer) RGBA {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_secondary_color(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := *NewRGBARef(unsafe.Pointer(&__ret))
	return __v
}

// Blip_get_alpha function as declared in out/capi.h:288
func Blip_get_alpha(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_alpha(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_flash_timer function as declared in out/capi.h:289
func Blip_get_flash_timer(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_flash_timer(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_flash_interval function as declared in out/capi.h:290
func Blip_get_flash_interval(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_flash_interval(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_as_friendly function as declared in out/capi.h:291
func Blip_get_as_friendly(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_as_friendly(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_route function as declared in out/capi.h:292
func Blip_get_route(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_route(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_bright function as declared in out/capi.h:293
func Blip_get_bright(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_bright(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_number function as declared in out/capi.h:294
func Blip_get_number(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_number(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_show_cone function as declared in out/capi.h:295
func Blip_get_show_cone(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_show_cone(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_flashes function as declared in out/capi.h:296
func Blip_get_flashes(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_flashes(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_flashes_alternate function as declared in out/capi.h:297
func Blip_get_flashes_alternate(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_flashes_alternate(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_as_short_range function as declared in out/capi.h:298
func Blip_get_as_short_range(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_as_short_range(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_priority function as declared in out/capi.h:299
func Blip_get_priority(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_priority(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_rotation function as declared in out/capi.h:300
func Blip_get_rotation(b unsafe.Pointer) float32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_rotation(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Blip_get_gxt_name function as declared in out/capi.h:301
func Blip_get_gxt_name(b unsafe.Pointer) string {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_gxt_name(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Blip_get_name function as declared in out/capi.h:302
func Blip_get_name(b unsafe.Pointer) string {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_name(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Blip_get_route_color function as declared in out/capi.h:303
func Blip_get_route_color(b unsafe.Pointer) RGBA {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_route_color(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := *NewRGBARef(unsafe.Pointer(&__ret))
	return __v
}

// Blip_get_pulse function as declared in out/capi.h:304
func Blip_get_pulse(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_pulse(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_as_mission_creator function as declared in out/capi.h:305
func Blip_get_as_mission_creator(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_as_mission_creator(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_tick_visible function as declared in out/capi.h:306
func Blip_get_tick_visible(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_tick_visible(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_heading_indicator_visible function as declared in out/capi.h:307
func Blip_get_heading_indicator_visible(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_heading_indicator_visible(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_outline_indicator_visible function as declared in out/capi.h:308
func Blip_get_outline_indicator_visible(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_outline_indicator_visible(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_friend_indicator_visible function as declared in out/capi.h:309
func Blip_get_friend_indicator_visible(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_friend_indicator_visible(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_crew_indicator_visible function as declared in out/capi.h:310
func Blip_get_crew_indicator_visible(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_crew_indicator_visible(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_category function as declared in out/capi.h:311
func Blip_get_category(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_category(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_as_high_detail function as declared in out/capi.h:312
func Blip_get_as_high_detail(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_as_high_detail(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_get_shrinked function as declared in out/capi.h:313
func Blip_get_shrinked(b unsafe.Pointer) int32 {
	cb, cbAllocMap := b, cgoAllocsUnknown
	__ret := C.blip_get_shrinked(cb)
	runtime.KeepAlive(cbAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Blip_set_sprite function as declared in out/capi.h:314
func Blip_set_sprite(b unsafe.Pointer, sprite int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	csprite, cspriteAllocMap := (C.int)(sprite), cgoAllocsUnknown
	C.blip_set_sprite(cb, csprite)
	runtime.KeepAlive(cspriteAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_color function as declared in out/capi.h:315
func Blip_set_color(b unsafe.Pointer, color int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	ccolor, ccolorAllocMap := (C.int)(color), cgoAllocsUnknown
	C.blip_set_color(cb, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_route function as declared in out/capi.h:316
func Blip_set_route(b unsafe.Pointer, state int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.blip_set_route(cb, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_route_color function as declared in out/capi.h:317
func Blip_set_route_color(b unsafe.Pointer, color RGBA) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	ccolor, ccolorAllocMap := color.PassValue()
	C.blip_set_route_color(cb, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_secondary_color function as declared in out/capi.h:318
func Blip_set_secondary_color(b unsafe.Pointer, color RGBA) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	ccolor, ccolorAllocMap := color.PassValue()
	C.blip_set_secondary_color(cb, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_alpha function as declared in out/capi.h:319
func Blip_set_alpha(b unsafe.Pointer, alpha int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	calpha, calphaAllocMap := (C.int)(alpha), cgoAllocsUnknown
	C.blip_set_alpha(cb, calpha)
	runtime.KeepAlive(calphaAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_flash_timer function as declared in out/capi.h:320
func Blip_set_flash_timer(b unsafe.Pointer, timer int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	ctimer, ctimerAllocMap := (C.int)(timer), cgoAllocsUnknown
	C.blip_set_flash_timer(cb, ctimer)
	runtime.KeepAlive(ctimerAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_flash_interval function as declared in out/capi.h:321
func Blip_set_flash_interval(b unsafe.Pointer, interval int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cinterval, cintervalAllocMap := (C.int)(interval), cgoAllocsUnknown
	C.blip_set_flash_interval(cb, cinterval)
	runtime.KeepAlive(cintervalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_as_friendly function as declared in out/capi.h:322
func Blip_set_as_friendly(b unsafe.Pointer, friendly int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cfriendly, cfriendlyAllocMap := (C.int)(friendly), cgoAllocsUnknown
	C.blip_set_as_friendly(cb, cfriendly)
	runtime.KeepAlive(cfriendlyAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_bright function as declared in out/capi.h:323
func Blip_set_bright(b unsafe.Pointer, bright int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cbright, cbrightAllocMap := (C.int)(bright), cgoAllocsUnknown
	C.blip_set_bright(cb, cbright)
	runtime.KeepAlive(cbrightAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_number function as declared in out/capi.h:324
func Blip_set_number(b unsafe.Pointer, number int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cnumber, cnumberAllocMap := (C.int)(number), cgoAllocsUnknown
	C.blip_set_number(cb, cnumber)
	runtime.KeepAlive(cnumberAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_show_cone function as declared in out/capi.h:325
func Blip_set_show_cone(b unsafe.Pointer, state int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.blip_set_show_cone(cb, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_flashes function as declared in out/capi.h:326
func Blip_set_flashes(b unsafe.Pointer, state int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.blip_set_flashes(cb, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_flashes_alternate function as declared in out/capi.h:327
func Blip_set_flashes_alternate(b unsafe.Pointer, state int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.blip_set_flashes_alternate(cb, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_as_short_range function as declared in out/capi.h:328
func Blip_set_as_short_range(b unsafe.Pointer, state int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.blip_set_as_short_range(cb, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_priority function as declared in out/capi.h:329
func Blip_set_priority(b unsafe.Pointer, state int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.blip_set_priority(cb, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_rotation function as declared in out/capi.h:330
func Blip_set_rotation(b unsafe.Pointer, rot float32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	crot, crotAllocMap := (C.float)(rot), cgoAllocsUnknown
	C.blip_set_rotation(cb, crot)
	runtime.KeepAlive(crotAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_gxt_name function as declared in out/capi.h:331
func Blip_set_gxt_name(b unsafe.Pointer, name string) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cname, cnameAllocMap := unpackPCharString(name)
	C.blip_set_gxt_name(cb, cname)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_name function as declared in out/capi.h:332
func Blip_set_name(b unsafe.Pointer, name string) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cname, cnameAllocMap := unpackPCharString(name)
	C.blip_set_name(cb, cname)
	runtime.KeepAlive(cnameAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_pulse function as declared in out/capi.h:333
func Blip_set_pulse(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_pulse(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_as_mission_creator function as declared in out/capi.h:334
func Blip_set_as_mission_creator(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_as_mission_creator(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_tick_visible function as declared in out/capi.h:335
func Blip_set_tick_visible(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_tick_visible(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_heading_indicator_visible function as declared in out/capi.h:336
func Blip_set_heading_indicator_visible(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_heading_indicator_visible(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_outline_indicator_visible function as declared in out/capi.h:337
func Blip_set_outline_indicator_visible(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_outline_indicator_visible(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_friend_indicator_visible function as declared in out/capi.h:338
func Blip_set_friend_indicator_visible(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_friend_indicator_visible(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_crew_indicator_visible function as declared in out/capi.h:339
func Blip_set_crew_indicator_visible(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_crew_indicator_visible(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_category function as declared in out/capi.h:340
func Blip_set_category(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_category(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_as_high_detail function as declared in out/capi.h:341
func Blip_set_as_high_detail(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_as_high_detail(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_set_shrinked function as declared in out/capi.h:342
func Blip_set_shrinked(b unsafe.Pointer, val int32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	cval, cvalAllocMap := (C.int)(val), cgoAllocsUnknown
	C.blip_set_shrinked(cb, cval)
	runtime.KeepAlive(cvalAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Blip_fade function as declared in out/capi.h:343
func Blip_fade(b unsafe.Pointer, opacity uint32, duration uint32) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	copacity, copacityAllocMap := (C.uint)(opacity), cgoAllocsUnknown
	cduration, cdurationAllocMap := (C.uint)(duration), cgoAllocsUnknown
	C.blip_fade(cb, copacity, cduration)
	runtime.KeepAlive(cdurationAllocMap)
	runtime.KeepAlive(copacityAllocMap)
	runtime.KeepAlive(cbAllocMap)
}

// Checkpoint_get_type function as declared in out/capi.h:375
func Checkpoint_get_type(c unsafe.Pointer) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.checkpoint_get_type(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Checkpoint_has_meta_data function as declared in out/capi.h:376
func Checkpoint_has_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.checkpoint_has_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Checkpoint_get_meta_data function as declared in out/capi.h:377
func Checkpoint_get_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.checkpoint_get_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Checkpoint_set_meta_data function as declared in out/capi.h:378
func Checkpoint_set_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.checkpoint_set_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Checkpoint_delete_meta_data function as declared in out/capi.h:379
func Checkpoint_delete_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.checkpoint_delete_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Checkpoint_destroy function as declared in out/capi.h:380
func Checkpoint_destroy(b unsafe.Pointer) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	C.checkpoint_destroy(cb)
	runtime.KeepAlive(cbAllocMap)
}

// Checkpoint_is_valid function as declared in out/capi.h:381
func Checkpoint_is_valid(resourceName string, p unsafe.Pointer) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.checkpoint_is_valid(cresourceName, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Checkpoint_get_position function as declared in out/capi.h:382
func Checkpoint_get_position(p unsafe.Pointer) Position {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.checkpoint_get_position(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewPositionRef(unsafe.Pointer(&__ret))
	return __v
}

// Checkpoint_set_position function as declared in out/capi.h:383
func Checkpoint_set_position(p unsafe.Pointer, x float32, y float32, z float32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	C.checkpoint_set_position(cp, cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Checkpoint_get_dimension function as declared in out/capi.h:384
func Checkpoint_get_dimension(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.checkpoint_get_dimension(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Checkpoint_set_dimension function as declared in out/capi.h:385
func Checkpoint_set_dimension(p unsafe.Pointer, dimension int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cdimension, cdimensionAllocMap := (C.long)(dimension), cgoAllocsUnknown
	C.checkpoint_set_dimension(cp, cdimension)
	runtime.KeepAlive(cdimensionAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Checkpoint_get_col_shape_type function as declared in out/capi.h:386
func Checkpoint_get_col_shape_type(c unsafe.Pointer) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.checkpoint_get_col_shape_type(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Checkpoint_is_entity_in function as declared in out/capi.h:387
func Checkpoint_is_entity_in(c unsafe.Pointer, e Entity) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	ce, ceAllocMap := e.PassValue()
	__ret := C.checkpoint_is_entity_in(cc, ce)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Checkpoint_is_point_in function as declared in out/capi.h:388
func Checkpoint_is_point_in(c unsafe.Pointer, x float32, y float32, z float32) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	__ret := C.checkpoint_is_point_in(cc, cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Checkpoint_set_players_only function as declared in out/capi.h:389
func Checkpoint_set_players_only(c unsafe.Pointer, state int32) {
	cc, ccAllocMap := c, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.checkpoint_set_players_only(cc, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(ccAllocMap)
}

// Checkpoint_is_players_only function as declared in out/capi.h:390
func Checkpoint_is_players_only(c unsafe.Pointer) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.checkpoint_is_players_only(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Checkpoint_get_checkpoint_type function as declared in out/capi.h:391
func Checkpoint_get_checkpoint_type(c unsafe.Pointer) byte {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.checkpoint_get_checkpoint_type(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (byte)(__ret)
	return __v
}

// Checkpoint_get_height function as declared in out/capi.h:392
func Checkpoint_get_height(c unsafe.Pointer) float32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.checkpoint_get_height(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Checkpoint_get_radius function as declared in out/capi.h:393
func Checkpoint_get_radius(c unsafe.Pointer) float32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.checkpoint_get_radius(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Checkpoint_get_color function as declared in out/capi.h:394
func Checkpoint_get_color(c unsafe.Pointer) RGBA {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.checkpoint_get_color(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := *NewRGBARef(unsafe.Pointer(&__ret))
	return __v
}

// Checkpoint_get_next_position function as declared in out/capi.h:395
func Checkpoint_get_next_position(c unsafe.Pointer) Position {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.checkpoint_get_next_position(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := *NewPositionRef(unsafe.Pointer(&__ret))
	return __v
}

// Checkpoint_set_checkpoint_type function as declared in out/capi.h:396
func Checkpoint_set_checkpoint_type(c unsafe.Pointer, _type byte) {
	cc, ccAllocMap := c, cgoAllocsUnknown
	c_type, c_typeAllocMap := (C.uchar)(_type), cgoAllocsUnknown
	C.checkpoint_set_checkpoint_type(cc, c_type)
	runtime.KeepAlive(c_typeAllocMap)
	runtime.KeepAlive(ccAllocMap)
}

// Checkpoint_set_height function as declared in out/capi.h:397
func Checkpoint_set_height(c unsafe.Pointer, height float32) {
	cc, ccAllocMap := c, cgoAllocsUnknown
	cheight, cheightAllocMap := (C.float)(height), cgoAllocsUnknown
	C.checkpoint_set_height(cc, cheight)
	runtime.KeepAlive(cheightAllocMap)
	runtime.KeepAlive(ccAllocMap)
}

// Checkpoint_set_radius function as declared in out/capi.h:398
func Checkpoint_set_radius(c unsafe.Pointer, radius float32) {
	cc, ccAllocMap := c, cgoAllocsUnknown
	cradius, cradiusAllocMap := (C.float)(radius), cgoAllocsUnknown
	C.checkpoint_set_radius(cc, cradius)
	runtime.KeepAlive(cradiusAllocMap)
	runtime.KeepAlive(ccAllocMap)
}

// Checkpoint_set_color function as declared in out/capi.h:399
func Checkpoint_set_color(c unsafe.Pointer, r byte, g byte, b byte, a byte) {
	cc, ccAllocMap := c, cgoAllocsUnknown
	cr, crAllocMap := (C.uchar)(r), cgoAllocsUnknown
	cg, cgAllocMap := (C.uchar)(g), cgoAllocsUnknown
	cb, cbAllocMap := (C.uchar)(b), cgoAllocsUnknown
	ca, caAllocMap := (C.uchar)(a), cgoAllocsUnknown
	C.checkpoint_set_color(cc, cr, cg, cb, ca)
	runtime.KeepAlive(caAllocMap)
	runtime.KeepAlive(cbAllocMap)
	runtime.KeepAlive(cgAllocMap)
	runtime.KeepAlive(crAllocMap)
	runtime.KeepAlive(ccAllocMap)
}

// Checkpoint_set_next_position function as declared in out/capi.h:400
func Checkpoint_set_next_position(c unsafe.Pointer, x float32, y float32, z float32) {
	cc, ccAllocMap := c, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	C.checkpoint_set_next_position(cc, cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(ccAllocMap)
}

// Col_shape_get_type function as declared in out/capi.h:422
func Col_shape_get_type(c unsafe.Pointer) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.col_shape_get_type(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Col_shape_has_meta_data function as declared in out/capi.h:423
func Col_shape_has_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.col_shape_has_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Col_shape_get_meta_data function as declared in out/capi.h:424
func Col_shape_get_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.col_shape_get_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Col_shape_set_meta_data function as declared in out/capi.h:425
func Col_shape_set_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.col_shape_set_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Col_shape_delete_meta_data function as declared in out/capi.h:426
func Col_shape_delete_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.col_shape_delete_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Col_shape_destroy function as declared in out/capi.h:427
func Col_shape_destroy(b unsafe.Pointer) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	C.col_shape_destroy(cb)
	runtime.KeepAlive(cbAllocMap)
}

// Col_shape_is_valid function as declared in out/capi.h:428
func Col_shape_is_valid(resourceName string, p unsafe.Pointer) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.col_shape_is_valid(cresourceName, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Col_shape_get_position function as declared in out/capi.h:429
func Col_shape_get_position(p unsafe.Pointer) Position {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.col_shape_get_position(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewPositionRef(unsafe.Pointer(&__ret))
	return __v
}

// Col_shape_set_position function as declared in out/capi.h:430
func Col_shape_set_position(p unsafe.Pointer, x float32, y float32, z float32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	C.col_shape_set_position(cp, cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Col_shape_get_dimension function as declared in out/capi.h:431
func Col_shape_get_dimension(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.col_shape_get_dimension(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Col_shape_set_dimension function as declared in out/capi.h:432
func Col_shape_set_dimension(p unsafe.Pointer, dimension int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cdimension, cdimensionAllocMap := (C.long)(dimension), cgoAllocsUnknown
	C.col_shape_set_dimension(cp, cdimension)
	runtime.KeepAlive(cdimensionAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Col_shape_get_col_shape_type function as declared in out/capi.h:433
func Col_shape_get_col_shape_type(c unsafe.Pointer) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.col_shape_get_col_shape_type(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Col_shape_is_entity_in function as declared in out/capi.h:434
func Col_shape_is_entity_in(c unsafe.Pointer, e Entity) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	ce, ceAllocMap := e.PassValue()
	__ret := C.col_shape_is_entity_in(cc, ce)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Col_shape_is_point_in function as declared in out/capi.h:435
func Col_shape_is_point_in(c unsafe.Pointer, x float32, y float32, z float32) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	__ret := C.col_shape_is_point_in(cc, cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Col_shape_set_players_only function as declared in out/capi.h:436
func Col_shape_set_players_only(c unsafe.Pointer, state int32) {
	cc, ccAllocMap := c, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.col_shape_set_players_only(cc, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(ccAllocMap)
}

// Col_shape_is_players_only function as declared in out/capi.h:437
func Col_shape_is_players_only(c unsafe.Pointer) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.col_shape_is_players_only(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Core_log_info function as declared in out/capi.h:504
func Core_log_info(message string) {
	cmessage, cmessageAllocMap := unpackPCharString(message)
	C.core_log_info(cmessage)
	runtime.KeepAlive(cmessageAllocMap)
}

// Core_log_debug function as declared in out/capi.h:505
func Core_log_debug(message string) {
	cmessage, cmessageAllocMap := unpackPCharString(message)
	C.core_log_debug(cmessage)
	runtime.KeepAlive(cmessageAllocMap)
}

// Core_log_warning function as declared in out/capi.h:506
func Core_log_warning(message string) {
	cmessage, cmessageAllocMap := unpackPCharString(message)
	C.core_log_warning(cmessage)
	runtime.KeepAlive(cmessageAllocMap)
}

// Core_log_error function as declared in out/capi.h:507
func Core_log_error(message string) {
	cmessage, cmessageAllocMap := unpackPCharString(message)
	C.core_log_error(cmessage)
	runtime.KeepAlive(cmessageAllocMap)
}

// Core_log_colored function as declared in out/capi.h:508
func Core_log_colored(message string) {
	cmessage, cmessageAllocMap := unpackPCharString(message)
	C.core_log_colored(cmessage)
	runtime.KeepAlive(cmessageAllocMap)
}

// Core_create_vehicle function as declared in out/capi.h:509
func Core_create_vehicle(model uint32, posX float32, posY float32, posZ float32, rotX float32, rotY float32, rotZ float32) unsafe.Pointer {
	cmodel, cmodelAllocMap := (C.ulong)(model), cgoAllocsUnknown
	cposX, cposXAllocMap := (C.float)(posX), cgoAllocsUnknown
	cposY, cposYAllocMap := (C.float)(posY), cgoAllocsUnknown
	cposZ, cposZAllocMap := (C.float)(posZ), cgoAllocsUnknown
	crotX, crotXAllocMap := (C.float)(rotX), cgoAllocsUnknown
	crotY, crotYAllocMap := (C.float)(rotY), cgoAllocsUnknown
	crotZ, crotZAllocMap := (C.float)(rotZ), cgoAllocsUnknown
	__ret := C.core_create_vehicle(cmodel, cposX, cposY, cposZ, crotX, crotY, crotZ)
	runtime.KeepAlive(crotZAllocMap)
	runtime.KeepAlive(crotYAllocMap)
	runtime.KeepAlive(crotXAllocMap)
	runtime.KeepAlive(cposZAllocMap)
	runtime.KeepAlive(cposYAllocMap)
	runtime.KeepAlive(cposXAllocMap)
	runtime.KeepAlive(cmodelAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_checkpoint function as declared in out/capi.h:511
func Core_create_checkpoint(_type byte, x float32, y float32, z float32, radius float32, height float32, r byte, g byte, b byte, a byte) unsafe.Pointer {
	c_type, c_typeAllocMap := (C.uchar)(_type), cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	cradius, cradiusAllocMap := (C.float)(radius), cgoAllocsUnknown
	cheight, cheightAllocMap := (C.float)(height), cgoAllocsUnknown
	cr, crAllocMap := (C.uchar)(r), cgoAllocsUnknown
	cg, cgAllocMap := (C.uchar)(g), cgoAllocsUnknown
	cb, cbAllocMap := (C.uchar)(b), cgoAllocsUnknown
	ca, caAllocMap := (C.uchar)(a), cgoAllocsUnknown
	__ret := C.core_create_checkpoint(c_type, cx, cy, cz, cradius, cheight, cr, cg, cb, ca)
	runtime.KeepAlive(caAllocMap)
	runtime.KeepAlive(cbAllocMap)
	runtime.KeepAlive(cgAllocMap)
	runtime.KeepAlive(crAllocMap)
	runtime.KeepAlive(cheightAllocMap)
	runtime.KeepAlive(cradiusAllocMap)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(c_typeAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_voice_channel function as declared in out/capi.h:513
func Core_create_voice_channel(spacial int32, maxDistance float32) unsafe.Pointer {
	cspacial, cspacialAllocMap := (C.int)(spacial), cgoAllocsUnknown
	cmaxDistance, cmaxDistanceAllocMap := (C.float)(maxDistance), cgoAllocsUnknown
	__ret := C.core_create_voice_channel(cspacial, cmaxDistance)
	runtime.KeepAlive(cmaxDistanceAllocMap)
	runtime.KeepAlive(cspacialAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_version function as declared in out/capi.h:514
func Core_get_version() string {
	__ret := C.core_get_version()
	__v := packPCharString(__ret)
	return __v
}

// Core_get_branch function as declared in out/capi.h:515
func Core_get_branch() string {
	__ret := C.core_get_branch()
	__v := packPCharString(__ret)
	return __v
}

// Core_is_debug function as declared in out/capi.h:516
func Core_is_debug() int32 {
	__ret := C.core_is_debug()
	__v := (int32)(__ret)
	return __v
}

// Core_hash function as declared in out/capi.h:517
func Core_hash(str string) uint32 {
	cstr, cstrAllocMap := unpackPCharString(str)
	__ret := C.core_hash(cstr)
	runtime.KeepAlive(cstrAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Core_file_exists function as declared in out/capi.h:518
func Core_file_exists(path string) int32 {
	cpath, cpathAllocMap := unpackPCharString(path)
	__ret := C.core_file_exists(cpath)
	runtime.KeepAlive(cpathAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Core_read_file function as declared in out/capi.h:519
func Core_read_file(path string) string {
	cpath, cpathAllocMap := unpackPCharString(path)
	__ret := C.core_read_file(cpath)
	runtime.KeepAlive(cpathAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Core_get_entity_by_i_d function as declared in out/capi.h:520
func Core_get_entity_by_i_d(id uint16) Entity {
	cid, cidAllocMap := (C.ushort)(id), cgoAllocsUnknown
	__ret := C.core_get_entity_by_i_d(cid)
	runtime.KeepAlive(cidAllocMap)
	__v := *NewEntityRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_entities function as declared in out/capi.h:521
func Core_get_entities() Array {
	__ret := C.core_get_entities()
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_players function as declared in out/capi.h:522
func Core_get_players() Array {
	__ret := C.core_get_players()
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_vehicles function as declared in out/capi.h:523
func Core_get_vehicles() Array {
	__ret := C.core_get_vehicles()
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_has_meta_data function as declared in out/capi.h:524
func Core_has_meta_data(key string) int32 {
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.core_has_meta_data(ckey)
	runtime.KeepAlive(ckeyAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Core_get_meta_data function as declared in out/capi.h:525
func Core_get_meta_data(key string) Array {
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.core_get_meta_data(ckey)
	runtime.KeepAlive(ckeyAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_set_meta_data function as declared in out/capi.h:526
func Core_set_meta_data(key string, data []byte, size uint64) {
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.core_set_meta_data(ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
}

// Core_delete_meta_data function as declared in out/capi.h:527
func Core_delete_meta_data(key string) {
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.core_delete_meta_data(ckey)
	runtime.KeepAlive(ckeyAllocMap)
}

// Core_has_synced_meta_data function as declared in out/capi.h:528
func Core_has_synced_meta_data(key string) int32 {
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.core_has_synced_meta_data(ckey)
	runtime.KeepAlive(ckeyAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Core_get_synced_meta_data function as declared in out/capi.h:529
func Core_get_synced_meta_data(key string) Array {
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.core_get_synced_meta_data(ckey)
	runtime.KeepAlive(ckeyAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_required_permissions function as declared in out/capi.h:530
func Core_get_required_permissions() Array {
	__ret := C.core_get_required_permissions()
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_optional_permissions function as declared in out/capi.h:531
func Core_get_optional_permissions() Array {
	__ret := C.core_get_optional_permissions()
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_destroy_base_object function as declared in out/capi.h:532
func Core_destroy_base_object(h unsafe.Pointer) {
	ch, chAllocMap := h, cgoAllocsUnknown
	C.core_destroy_base_object(ch)
	runtime.KeepAlive(chAllocMap)
}

// Core_get_root_directory function as declared in out/capi.h:533
func Core_get_root_directory() string {
	__ret := C.core_get_root_directory()
	__v := packPCharString(__ret)
	return __v
}

// Core_start_resource function as declared in out/capi.h:534
func Core_start_resource(name string) int32 {
	cname, cnameAllocMap := unpackPCharString(name)
	__ret := C.core_start_resource(cname)
	runtime.KeepAlive(cnameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Core_stop_resource function as declared in out/capi.h:535
func Core_stop_resource(name string) {
	cname, cnameAllocMap := unpackPCharString(name)
	C.core_stop_resource(cname)
	runtime.KeepAlive(cnameAllocMap)
}

// Core_restart_resource function as declared in out/capi.h:536
func Core_restart_resource(name string) {
	cname, cnameAllocMap := unpackPCharString(name)
	C.core_restart_resource(cname)
	runtime.KeepAlive(cnameAllocMap)
}

// Core_set_synced_meta_data function as declared in out/capi.h:537
func Core_set_synced_meta_data(key string, data []byte, size uint64) {
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.core_set_synced_meta_data(ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
}

// Core_delete_synced_meta_data function as declared in out/capi.h:538
func Core_delete_synced_meta_data(key string) {
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.core_delete_synced_meta_data(ckey)
	runtime.KeepAlive(ckeyAllocMap)
}

// Core_get_players_by_name function as declared in out/capi.h:539
func Core_get_players_by_name(name string) Array {
	cname, cnameAllocMap := unpackPCharString(name)
	__ret := C.core_get_players_by_name(cname)
	runtime.KeepAlive(cnameAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_net_time function as declared in out/capi.h:540
func Core_get_net_time() uint32 {
	__ret := C.core_get_net_time()
	__v := (uint32)(__ret)
	return __v
}

// Core_set_password function as declared in out/capi.h:541
func Core_set_password(password string) {
	cpassword, cpasswordAllocMap := unpackPCharString(password)
	C.core_set_password(cpassword)
	runtime.KeepAlive(cpasswordAllocMap)
}

// Core_get_s_d_k_hash function as declared in out/capi.h:542
func Core_get_s_d_k_hash() string {
	__ret := C.core_get_s_d_k_hash()
	__v := packPCharString(__ret)
	return __v
}

// Core_create_col_shape_cylinder function as declared in out/capi.h:543
func Core_create_col_shape_cylinder(posX float32, posY float32, posZ float32, radius float32, height float32) unsafe.Pointer {
	cposX, cposXAllocMap := (C.float)(posX), cgoAllocsUnknown
	cposY, cposYAllocMap := (C.float)(posY), cgoAllocsUnknown
	cposZ, cposZAllocMap := (C.float)(posZ), cgoAllocsUnknown
	cradius, cradiusAllocMap := (C.float)(radius), cgoAllocsUnknown
	cheight, cheightAllocMap := (C.float)(height), cgoAllocsUnknown
	__ret := C.core_create_col_shape_cylinder(cposX, cposY, cposZ, cradius, cheight)
	runtime.KeepAlive(cheightAllocMap)
	runtime.KeepAlive(cradiusAllocMap)
	runtime.KeepAlive(cposZAllocMap)
	runtime.KeepAlive(cposYAllocMap)
	runtime.KeepAlive(cposXAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_col_shape_cube function as declared in out/capi.h:544
func Core_create_col_shape_cube(posX1 float32, posY1 float32, posZ1 float32, posX2 float32, posY2 float32, posZ2 float32) unsafe.Pointer {
	cposX1, cposX1AllocMap := (C.float)(posX1), cgoAllocsUnknown
	cposY1, cposY1AllocMap := (C.float)(posY1), cgoAllocsUnknown
	cposZ1, cposZ1AllocMap := (C.float)(posZ1), cgoAllocsUnknown
	cposX2, cposX2AllocMap := (C.float)(posX2), cgoAllocsUnknown
	cposY2, cposY2AllocMap := (C.float)(posY2), cgoAllocsUnknown
	cposZ2, cposZ2AllocMap := (C.float)(posZ2), cgoAllocsUnknown
	__ret := C.core_create_col_shape_cube(cposX1, cposY1, cposZ1, cposX2, cposY2, cposZ2)
	runtime.KeepAlive(cposZ2AllocMap)
	runtime.KeepAlive(cposY2AllocMap)
	runtime.KeepAlive(cposX2AllocMap)
	runtime.KeepAlive(cposZ1AllocMap)
	runtime.KeepAlive(cposY1AllocMap)
	runtime.KeepAlive(cposX1AllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_col_shape_rectangle function as declared in out/capi.h:545
func Core_create_col_shape_rectangle(x1 float32, y1 float32, x2 float32, y2 float32, z float32) unsafe.Pointer {
	cx1, cx1AllocMap := (C.float)(x1), cgoAllocsUnknown
	cy1, cy1AllocMap := (C.float)(y1), cgoAllocsUnknown
	cx2, cx2AllocMap := (C.float)(x2), cgoAllocsUnknown
	cy2, cy2AllocMap := (C.float)(y2), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	__ret := C.core_create_col_shape_rectangle(cx1, cy1, cx2, cy2, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cy2AllocMap)
	runtime.KeepAlive(cx2AllocMap)
	runtime.KeepAlive(cy1AllocMap)
	runtime.KeepAlive(cx1AllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_col_shape_circle function as declared in out/capi.h:546
func Core_create_col_shape_circle(posX float32, posY float32, posZ float32, radius float32) unsafe.Pointer {
	cposX, cposXAllocMap := (C.float)(posX), cgoAllocsUnknown
	cposY, cposYAllocMap := (C.float)(posY), cgoAllocsUnknown
	cposZ, cposZAllocMap := (C.float)(posZ), cgoAllocsUnknown
	cradius, cradiusAllocMap := (C.float)(radius), cgoAllocsUnknown
	__ret := C.core_create_col_shape_circle(cposX, cposY, cposZ, cradius)
	runtime.KeepAlive(cradiusAllocMap)
	runtime.KeepAlive(cposZAllocMap)
	runtime.KeepAlive(cposYAllocMap)
	runtime.KeepAlive(cposXAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_col_shape_sphere function as declared in out/capi.h:547
func Core_create_col_shape_sphere(posX float32, posY float32, posZ float32, radius float32) unsafe.Pointer {
	cposX, cposXAllocMap := (C.float)(posX), cgoAllocsUnknown
	cposY, cposYAllocMap := (C.float)(posY), cgoAllocsUnknown
	cposZ, cposZAllocMap := (C.float)(posZ), cgoAllocsUnknown
	cradius, cradiusAllocMap := (C.float)(radius), cgoAllocsUnknown
	__ret := C.core_create_col_shape_sphere(cposX, cposY, cposZ, cradius)
	runtime.KeepAlive(cradiusAllocMap)
	runtime.KeepAlive(cposZAllocMap)
	runtime.KeepAlive(cposYAllocMap)
	runtime.KeepAlive(cposXAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_trigger_local_event function as declared in out/capi.h:548
func Core_trigger_local_event(ev string, args Array) {
	cev, cevAllocMap := unpackPCharString(ev)
	cargs, cargsAllocMap := args.PassValue()
	C.core_trigger_local_event(cev, cargs)
	runtime.KeepAlive(cargsAllocMap)
	runtime.KeepAlive(cevAllocMap)
}

// Core_trigger_client_event function as declared in out/capi.h:549
func Core_trigger_client_event(p unsafe.Pointer, ev string, args Array) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cev, cevAllocMap := unpackPCharString(ev)
	cargs, cargsAllocMap := args.PassValue()
	C.core_trigger_client_event(cp, cev, cargs)
	runtime.KeepAlive(cargsAllocMap)
	runtime.KeepAlive(cevAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Core_trigger_client_event_for function as declared in out/capi.h:550
func Core_trigger_client_event_for(clients Array, ev string, args Array) {
	cclients, cclientsAllocMap := clients.PassValue()
	cev, cevAllocMap := unpackPCharString(ev)
	cargs, cargsAllocMap := args.PassValue()
	C.core_trigger_client_event_for(cclients, cev, cargs)
	runtime.KeepAlive(cargsAllocMap)
	runtime.KeepAlive(cevAllocMap)
	runtime.KeepAlive(cclientsAllocMap)
}

// Core_trigger_client_event_for_all function as declared in out/capi.h:551
func Core_trigger_client_event_for_all(ev string, args Array) {
	cev, cevAllocMap := unpackPCharString(ev)
	cargs, cargsAllocMap := args.PassValue()
	C.core_trigger_client_event_for_all(cev, cargs)
	runtime.KeepAlive(cargsAllocMap)
	runtime.KeepAlive(cevAllocMap)
}

// Core_create_point_blip_position function as declared in out/capi.h:552
func Core_create_point_blip_position(x float32, y float32, z float32) unsafe.Pointer {
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	__ret := C.core_create_point_blip_position(cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_point_blip_entity function as declared in out/capi.h:553
func Core_create_point_blip_entity(entity Entity) unsafe.Pointer {
	centity, centityAllocMap := entity.PassValue()
	__ret := C.core_create_point_blip_entity(centity)
	runtime.KeepAlive(centityAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_area_blip function as declared in out/capi.h:554
func Core_create_area_blip(x float32, y float32, z float32, width float32, height float32) unsafe.Pointer {
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	cwidth, cwidthAllocMap := (C.float)(width), cgoAllocsUnknown
	cheight, cheightAllocMap := (C.float)(height), cgoAllocsUnknown
	__ret := C.core_create_area_blip(cx, cy, cz, cwidth, cheight)
	runtime.KeepAlive(cheightAllocMap)
	runtime.KeepAlive(cwidthAllocMap)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_radius_blip function as declared in out/capi.h:555
func Core_create_radius_blip(x float32, y float32, z float32, radius float32) unsafe.Pointer {
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	cradius, cradiusAllocMap := (C.float)(radius), cgoAllocsUnknown
	__ret := C.core_create_radius_blip(cx, cy, cz, cradius)
	runtime.KeepAlive(cradiusAllocMap)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_create_col_shape_polygon function as declared in out/capi.h:556
func Core_create_col_shape_polygon(minZ float32, maxZ float32, points Array) unsafe.Pointer {
	cminZ, cminZAllocMap := (C.float)(minZ), cgoAllocsUnknown
	cmaxZ, cmaxZAllocMap := (C.float)(maxZ), cgoAllocsUnknown
	cpoints, cpointsAllocMap := points.PassValue()
	__ret := C.core_create_col_shape_polygon(cminZ, cmaxZ, cpoints)
	runtime.KeepAlive(cpointsAllocMap)
	runtime.KeepAlive(cmaxZAllocMap)
	runtime.KeepAlive(cminZAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_blips function as declared in out/capi.h:557
func Core_get_blips() Array {
	__ret := C.core_get_blips()
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_all_resources function as declared in out/capi.h:558
func Core_get_all_resources() Array {
	__ret := C.core_get_all_resources()
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_string_to_s_h_a256 function as declared in out/capi.h:559
func Core_string_to_s_h_a256(str string) string {
	cstr, cstrAllocMap := unpackPCharString(str)
	__ret := C.core_string_to_s_h_a256(cstr)
	runtime.KeepAlive(cstrAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Core_stop_server function as declared in out/capi.h:560
func Core_stop_server() {
	C.core_stop_server()
}

// Core_get_vehicle_model_by_hash function as declared in out/capi.h:561
func Core_get_vehicle_model_by_hash(hash uint32) VehicleModelInfo {
	chash, chashAllocMap := (C.uint)(hash), cgoAllocsUnknown
	__ret := C.core_get_vehicle_model_by_hash(chash)
	runtime.KeepAlive(chashAllocMap)
	__v := *NewVehicleModelInfoRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_get_server_config function as declared in out/capi.h:562
func Core_get_server_config() Array {
	__ret := C.core_get_server_config()
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Core_hash_server_password function as declared in out/capi.h:563
func Core_hash_server_password(password string) uint64 {
	cpassword, cpasswordAllocMap := unpackPCharString(password)
	__ret := C.core_hash_server_password(cpassword)
	runtime.KeepAlive(cpasswordAllocMap)
	__v := (uint64)(__ret)
	return __v
}

// Core_get_resource_by_name function as declared in out/capi.h:564
func Core_get_resource_by_name(resourceName string) unsafe.Pointer {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	__ret := C.core_get_resource_by_name(cresourceName)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Player_get_name function as declared in out/capi.h:695
func Player_get_name(p unsafe.Pointer) string {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_name(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Player_has_meta_data function as declared in out/capi.h:696
func Player_has_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.player_has_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_meta_data function as declared in out/capi.h:697
func Player_get_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.player_get_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_meta_data function as declared in out/capi.h:698
func Player_set_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.player_set_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Player_delete_meta_data function as declared in out/capi.h:699
func Player_delete_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.player_delete_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Player_has_synced_meta_data function as declared in out/capi.h:700
func Player_has_synced_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.player_has_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_synced_meta_data function as declared in out/capi.h:701
func Player_get_synced_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.player_get_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_synced_meta_data function as declared in out/capi.h:702
func Player_set_synced_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.player_set_synced_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Player_delete_synced_meta_data function as declared in out/capi.h:703
func Player_delete_synced_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.player_delete_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Player_has_stream_synced_meta_data function as declared in out/capi.h:704
func Player_has_stream_synced_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.player_has_stream_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_stream_synced_meta_data function as declared in out/capi.h:705
func Player_get_stream_synced_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.player_get_stream_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_stream_synced_meta_data function as declared in out/capi.h:706
func Player_set_stream_synced_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.player_set_stream_synced_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Player_delete_stream_synced_meta_data function as declared in out/capi.h:707
func Player_delete_stream_synced_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.player_delete_stream_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Player_get_position function as declared in out/capi.h:708
func Player_get_position(p unsafe.Pointer) Position {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_position(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewPositionRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_position function as declared in out/capi.h:709
func Player_set_position(p unsafe.Pointer, x float32, y float32, z float32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	C.player_set_position(cp, cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_rotation function as declared in out/capi.h:710
func Player_get_rotation(p unsafe.Pointer) Rotation {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_rotation(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewRotationRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_rotation function as declared in out/capi.h:711
func Player_set_rotation(p unsafe.Pointer, roll float32, pitch float32, yaw float32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	croll, crollAllocMap := (C.float)(roll), cgoAllocsUnknown
	cpitch, cpitchAllocMap := (C.float)(pitch), cgoAllocsUnknown
	cyaw, cyawAllocMap := (C.float)(yaw), cgoAllocsUnknown
	C.player_set_rotation(cp, croll, cpitch, cyaw)
	runtime.KeepAlive(cyawAllocMap)
	runtime.KeepAlive(cpitchAllocMap)
	runtime.KeepAlive(crollAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_dimension function as declared in out/capi.h:712
func Player_get_dimension(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_dimension(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_set_dimension function as declared in out/capi.h:713
func Player_set_dimension(p unsafe.Pointer, dimension int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cdimension, cdimensionAllocMap := (C.long)(dimension), cgoAllocsUnknown
	C.player_set_dimension(cp, cdimension)
	runtime.KeepAlive(cdimensionAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_spawn function as declared in out/capi.h:714
func Player_spawn(p unsafe.Pointer, x float32, y float32, z float32, delay uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	cdelay, cdelayAllocMap := (C.ulong)(delay), cgoAllocsUnknown
	C.player_spawn(cp, cx, cy, cz, cdelay)
	runtime.KeepAlive(cdelayAllocMap)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_despawn function as declared in out/capi.h:715
func Player_despawn(p unsafe.Pointer) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.player_despawn(cp)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_model function as declared in out/capi.h:716
func Player_set_model(p unsafe.Pointer, model uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cmodel, cmodelAllocMap := (C.ulong)(model), cgoAllocsUnknown
	C.player_set_model(cp, cmodel)
	runtime.KeepAlive(cmodelAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_model function as declared in out/capi.h:717
func Player_get_model(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_model(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_get_health function as declared in out/capi.h:718
func Player_get_health(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_health(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_set_health function as declared in out/capi.h:719
func Player_set_health(p unsafe.Pointer, health uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	chealth, chealthAllocMap := (C.uint)(health), cgoAllocsUnknown
	C.player_set_health(cp, chealth)
	runtime.KeepAlive(chealthAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_has_weapon_component function as declared in out/capi.h:720
func Player_has_weapon_component(p unsafe.Pointer, weapon uint32, component uint32) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweapon, cweaponAllocMap := (C.ulong)(weapon), cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.ulong)(component), cgoAllocsUnknown
	__ret := C.player_has_weapon_component(cp, cweapon, ccomponent)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cweaponAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_current_weapon_components function as declared in out/capi.h:721
func Player_get_current_weapon_components(p unsafe.Pointer) Array {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_current_weapon_components(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_get_weapon_tint_index function as declared in out/capi.h:722
func Player_get_weapon_tint_index(p unsafe.Pointer, weapon uint32) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweapon, cweaponAllocMap := (C.ulong)(weapon), cgoAllocsUnknown
	__ret := C.player_get_weapon_tint_index(cp, cweapon)
	runtime.KeepAlive(cweaponAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_get_current_weapon_tint_index function as declared in out/capi.h:723
func Player_get_current_weapon_tint_index(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_current_weapon_tint_index(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_get_current_weapon function as declared in out/capi.h:724
func Player_get_current_weapon(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_current_weapon(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_is_dead function as declared in out/capi.h:725
func Player_is_dead(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_dead(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_is_jumping function as declared in out/capi.h:726
func Player_is_jumping(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_jumping(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_is_in_ragdoll function as declared in out/capi.h:727
func Player_is_in_ragdoll(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_in_ragdoll(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_is_aiming function as declared in out/capi.h:728
func Player_is_aiming(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_aiming(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_is_shooting function as declared in out/capi.h:729
func Player_is_shooting(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_shooting(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_is_reloading function as declared in out/capi.h:730
func Player_is_reloading(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_reloading(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_armour function as declared in out/capi.h:731
func Player_get_armour(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_armour(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_set_armour function as declared in out/capi.h:732
func Player_set_armour(p unsafe.Pointer, armour uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	carmour, carmourAllocMap := (C.uint)(armour), cgoAllocsUnknown
	C.player_set_armour(cp, carmour)
	runtime.KeepAlive(carmourAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_move_speed function as declared in out/capi.h:733
func Player_get_move_speed(p unsafe.Pointer) float32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_move_speed(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Player_get_aim_pos function as declared in out/capi.h:734
func Player_get_aim_pos(p unsafe.Pointer) Position {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_aim_pos(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewPositionRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_get_head_rotation function as declared in out/capi.h:735
func Player_get_head_rotation(p unsafe.Pointer) Rotation {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_head_rotation(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewRotationRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_is_in_vehicle function as declared in out/capi.h:736
func Player_is_in_vehicle(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_in_vehicle(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_vehicle function as declared in out/capi.h:737
func Player_get_vehicle(p unsafe.Pointer) unsafe.Pointer {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_vehicle(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Player_get_seat function as declared in out/capi.h:738
func Player_get_seat(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_seat(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_get_entity_aiming_at function as declared in out/capi.h:739
func Player_get_entity_aiming_at(p unsafe.Pointer) Entity {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_entity_aiming_at(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewEntityRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_get_entity_aim_offset function as declared in out/capi.h:740
func Player_get_entity_aim_offset(p unsafe.Pointer) Position {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_entity_aim_offset(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewPositionRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_is_flashlight_active function as declared in out/capi.h:741
func Player_is_flashlight_active(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_flashlight_active(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_is_connected function as declared in out/capi.h:742
func Player_is_connected(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_connected(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_ping function as declared in out/capi.h:743
func Player_get_ping(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_ping(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_get_i_p function as declared in out/capi.h:744
func Player_get_i_p(p unsafe.Pointer) string {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_i_p(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Player_get_social_i_d function as declared in out/capi.h:745
func Player_get_social_i_d(p unsafe.Pointer) uint64 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_social_i_d(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint64)(__ret)
	return __v
}

// Player_get_hwid_hash function as declared in out/capi.h:746
func Player_get_hwid_hash(p unsafe.Pointer) uint64 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_hwid_hash(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint64)(__ret)
	return __v
}

// Player_get_hwid_ex_hash function as declared in out/capi.h:747
func Player_get_hwid_ex_hash(p unsafe.Pointer) uint64 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_hwid_ex_hash(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint64)(__ret)
	return __v
}

// Player_get_auth_token function as declared in out/capi.h:748
func Player_get_auth_token(p unsafe.Pointer) string {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_auth_token(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Player_set_max_armour function as declared in out/capi.h:749
func Player_set_max_armour(p unsafe.Pointer, armour uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	carmour, carmourAllocMap := (C.uint)(armour), cgoAllocsUnknown
	C.player_set_max_armour(cp, carmour)
	runtime.KeepAlive(carmourAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_current_weapon function as declared in out/capi.h:750
func Player_set_current_weapon(p unsafe.Pointer, weapon uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweapon, cweaponAllocMap := (C.ulong)(weapon), cgoAllocsUnknown
	C.player_set_current_weapon(cp, cweapon)
	runtime.KeepAlive(cweaponAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_weapon_tint_index function as declared in out/capi.h:751
func Player_set_weapon_tint_index(p unsafe.Pointer, weapon uint32, tintIndex uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweapon, cweaponAllocMap := (C.ulong)(weapon), cgoAllocsUnknown
	ctintIndex, ctintIndexAllocMap := (C.uint)(tintIndex), cgoAllocsUnknown
	C.player_set_weapon_tint_index(cp, cweapon, ctintIndex)
	runtime.KeepAlive(ctintIndexAllocMap)
	runtime.KeepAlive(cweaponAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_add_weapon_component function as declared in out/capi.h:752
func Player_add_weapon_component(p unsafe.Pointer, weapon uint32, component uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweapon, cweaponAllocMap := (C.ulong)(weapon), cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.ulong)(component), cgoAllocsUnknown
	C.player_add_weapon_component(cp, cweapon, ccomponent)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cweaponAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_remove_weapon_component function as declared in out/capi.h:753
func Player_remove_weapon_component(p unsafe.Pointer, weapon uint32, component uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweapon, cweaponAllocMap := (C.ulong)(weapon), cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.ulong)(component), cgoAllocsUnknown
	C.player_remove_weapon_component(cp, cweapon, ccomponent)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cweaponAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_clear_blood_damage function as declared in out/capi.h:754
func Player_clear_blood_damage(p unsafe.Pointer) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.player_clear_blood_damage(cp)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_max_health function as declared in out/capi.h:755
func Player_set_max_health(p unsafe.Pointer, health uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	chealth, chealthAllocMap := (C.uint)(health), cgoAllocsUnknown
	C.player_set_max_health(cp, chealth)
	runtime.KeepAlive(chealthAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_give_weapon function as declared in out/capi.h:756
func Player_give_weapon(p unsafe.Pointer, weapon uint32, ammo int32, selectWeapon int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweapon, cweaponAllocMap := (C.ulong)(weapon), cgoAllocsUnknown
	cammo, cammoAllocMap := (C.long)(ammo), cgoAllocsUnknown
	cselectWeapon, cselectWeaponAllocMap := (C.int)(selectWeapon), cgoAllocsUnknown
	C.player_give_weapon(cp, cweapon, cammo, cselectWeapon)
	runtime.KeepAlive(cselectWeaponAllocMap)
	runtime.KeepAlive(cammoAllocMap)
	runtime.KeepAlive(cweaponAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_remove_weapon function as declared in out/capi.h:757
func Player_remove_weapon(p unsafe.Pointer, weapon uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweapon, cweaponAllocMap := (C.ulong)(weapon), cgoAllocsUnknown
	C.player_remove_weapon(cp, cweapon)
	runtime.KeepAlive(cweaponAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_remove_all_weapons function as declared in out/capi.h:758
func Player_remove_all_weapons(p unsafe.Pointer) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.player_remove_all_weapons(cp)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_date_time function as declared in out/capi.h:759
func Player_set_date_time(p unsafe.Pointer, day int32, month int32, year int32, hour int32, minute int32, second int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cday, cdayAllocMap := (C.int)(day), cgoAllocsUnknown
	cmonth, cmonthAllocMap := (C.int)(month), cgoAllocsUnknown
	cyear, cyearAllocMap := (C.int)(year), cgoAllocsUnknown
	chour, chourAllocMap := (C.int)(hour), cgoAllocsUnknown
	cminute, cminuteAllocMap := (C.int)(minute), cgoAllocsUnknown
	csecond, csecondAllocMap := (C.int)(second), cgoAllocsUnknown
	C.player_set_date_time(cp, cday, cmonth, cyear, chour, cminute, csecond)
	runtime.KeepAlive(csecondAllocMap)
	runtime.KeepAlive(cminuteAllocMap)
	runtime.KeepAlive(chourAllocMap)
	runtime.KeepAlive(cyearAllocMap)
	runtime.KeepAlive(cmonthAllocMap)
	runtime.KeepAlive(cdayAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_weather function as declared in out/capi.h:760
func Player_set_weather(p unsafe.Pointer, weather uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cweather, cweatherAllocMap := (C.ulong)(weather), cgoAllocsUnknown
	C.player_set_weather(cp, cweather)
	runtime.KeepAlive(cweatherAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_kick function as declared in out/capi.h:761
func Player_kick(p unsafe.Pointer, reason string) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	creason, creasonAllocMap := unpackPCharString(reason)
	C.player_kick(cp, creason)
	runtime.KeepAlive(creasonAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_clothes function as declared in out/capi.h:762
func Player_get_clothes(p unsafe.Pointer, component uint32) Cloth {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	__ret := C.player_get_clothes(cp, ccomponent)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewClothRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_get_dlc_clothes function as declared in out/capi.h:763
func Player_get_dlc_clothes(p unsafe.Pointer, component uint32) DlcCloth {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	__ret := C.player_get_dlc_clothes(cp, ccomponent)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewDlcClothRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_get_props function as declared in out/capi.h:764
func Player_get_props(p unsafe.Pointer, component uint32) Prop {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	__ret := C.player_get_props(cp, ccomponent)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewPropRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_get_dlc_props function as declared in out/capi.h:765
func Player_get_dlc_props(p unsafe.Pointer, component uint32) DlcProp {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	__ret := C.player_get_dlc_props(cp, ccomponent)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewDlcPropRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_clothes function as declared in out/capi.h:766
func Player_set_clothes(p unsafe.Pointer, component uint32, drawable uint32, texture uint32, palette uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	cdrawable, cdrawableAllocMap := (C.uint)(drawable), cgoAllocsUnknown
	ctexture, ctextureAllocMap := (C.uint)(texture), cgoAllocsUnknown
	cpalette, cpaletteAllocMap := (C.uint)(palette), cgoAllocsUnknown
	C.player_set_clothes(cp, ccomponent, cdrawable, ctexture, cpalette)
	runtime.KeepAlive(cpaletteAllocMap)
	runtime.KeepAlive(ctextureAllocMap)
	runtime.KeepAlive(cdrawableAllocMap)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_dlc_clothes function as declared in out/capi.h:767
func Player_set_dlc_clothes(p unsafe.Pointer, component uint32, drawable uint32, texture uint32, palette uint32, dlc uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	cdrawable, cdrawableAllocMap := (C.uint)(drawable), cgoAllocsUnknown
	ctexture, ctextureAllocMap := (C.uint)(texture), cgoAllocsUnknown
	cpalette, cpaletteAllocMap := (C.uint)(palette), cgoAllocsUnknown
	cdlc, cdlcAllocMap := (C.ulong)(dlc), cgoAllocsUnknown
	C.player_set_dlc_clothes(cp, ccomponent, cdrawable, ctexture, cpalette, cdlc)
	runtime.KeepAlive(cdlcAllocMap)
	runtime.KeepAlive(cpaletteAllocMap)
	runtime.KeepAlive(ctextureAllocMap)
	runtime.KeepAlive(cdrawableAllocMap)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_props function as declared in out/capi.h:769
func Player_set_props(p unsafe.Pointer, component uint32, drawable uint32, texture uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	cdrawable, cdrawableAllocMap := (C.uint)(drawable), cgoAllocsUnknown
	ctexture, ctextureAllocMap := (C.uint)(texture), cgoAllocsUnknown
	C.player_set_props(cp, ccomponent, cdrawable, ctexture)
	runtime.KeepAlive(ctextureAllocMap)
	runtime.KeepAlive(cdrawableAllocMap)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_dlc_props function as declared in out/capi.h:770
func Player_set_dlc_props(p unsafe.Pointer, component uint32, drawable uint32, texture uint32, dlc uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	cdrawable, cdrawableAllocMap := (C.uint)(drawable), cgoAllocsUnknown
	ctexture, ctextureAllocMap := (C.uint)(texture), cgoAllocsUnknown
	cdlc, cdlcAllocMap := (C.ulong)(dlc), cgoAllocsUnknown
	C.player_set_dlc_props(cp, ccomponent, cdrawable, ctexture, cdlc)
	runtime.KeepAlive(cdlcAllocMap)
	runtime.KeepAlive(ctextureAllocMap)
	runtime.KeepAlive(cdrawableAllocMap)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_clear_props function as declared in out/capi.h:771
func Player_clear_props(p unsafe.Pointer, component uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ccomponent, ccomponentAllocMap := (C.uint)(component), cgoAllocsUnknown
	C.player_clear_props(cp, ccomponent)
	runtime.KeepAlive(ccomponentAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_is_entity_in_streaming_range function as declared in out/capi.h:772
func Player_is_entity_in_streaming_range(p unsafe.Pointer, entity Entity) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	centity, centityAllocMap := entity.PassValue()
	__ret := C.player_is_entity_in_streaming_range(cp, centity)
	runtime.KeepAlive(centityAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_max_health function as declared in out/capi.h:773
func Player_get_max_health(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_max_health(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_get_max_armour function as declared in out/capi.h:774
func Player_get_max_armour(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_max_armour(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_detach function as declared in out/capi.h:775
func Player_detach(p unsafe.Pointer) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.player_detach(cp)
	runtime.KeepAlive(cpAllocMap)
}

// Player_attach_to_entity function as declared in out/capi.h:776
func Player_attach_to_entity(p unsafe.Pointer, e Entity, otherBoneIndex int32, myBoneIndex int32, position Position, rotation Rotation, collision int32, noFixedRotation int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ce, ceAllocMap := e.PassValue()
	cotherBoneIndex, cotherBoneIndexAllocMap := (C.int)(otherBoneIndex), cgoAllocsUnknown
	cmyBoneIndex, cmyBoneIndexAllocMap := (C.int)(myBoneIndex), cgoAllocsUnknown
	cposition, cpositionAllocMap := position.PassValue()
	crotation, crotationAllocMap := rotation.PassValue()
	ccollision, ccollisionAllocMap := (C.int)(collision), cgoAllocsUnknown
	cnoFixedRotation, cnoFixedRotationAllocMap := (C.int)(noFixedRotation), cgoAllocsUnknown
	C.player_attach_to_entity(cp, ce, cotherBoneIndex, cmyBoneIndex, cposition, crotation, ccollision, cnoFixedRotation)
	runtime.KeepAlive(cnoFixedRotationAllocMap)
	runtime.KeepAlive(ccollisionAllocMap)
	runtime.KeepAlive(crotationAllocMap)
	runtime.KeepAlive(cpositionAllocMap)
	runtime.KeepAlive(cmyBoneIndexAllocMap)
	runtime.KeepAlive(cotherBoneIndexAllocMap)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_visible function as declared in out/capi.h:778
func Player_set_visible(p unsafe.Pointer, toggle int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ctoggle, ctoggleAllocMap := (C.int)(toggle), cgoAllocsUnknown
	C.player_set_visible(cp, ctoggle)
	runtime.KeepAlive(ctoggleAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_visible function as declared in out/capi.h:779
func Player_get_visible(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_visible(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_i_d function as declared in out/capi.h:780
func Player_get_i_d(p unsafe.Pointer) uint32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_i_d(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Player_get_network_owner function as declared in out/capi.h:781
func Player_get_network_owner(p unsafe.Pointer) unsafe.Pointer {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_network_owner(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_network_owner function as declared in out/capi.h:782
func Player_set_network_owner(p unsafe.Pointer, owner unsafe.Pointer, disableMigration int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cowner, cownerAllocMap := owner, cgoAllocsUnknown
	cdisableMigration, cdisableMigrationAllocMap := (C.int)(disableMigration), cgoAllocsUnknown
	C.player_set_network_owner(cp, cowner, cdisableMigration)
	runtime.KeepAlive(cdisableMigrationAllocMap)
	runtime.KeepAlive(cownerAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_destroy function as declared in out/capi.h:783
func Player_destroy(p unsafe.Pointer) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.player_destroy(cp)
	runtime.KeepAlive(cpAllocMap)
}

// Player_is_valid function as declared in out/capi.h:784
func Player_is_valid(resourceName string, p unsafe.Pointer) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_valid(cresourceName, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_streamed function as declared in out/capi.h:785
func Player_get_streamed(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_streamed(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_set_streamed function as declared in out/capi.h:786
func Player_set_streamed(p unsafe.Pointer, toggle int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ctoggle, ctoggleAllocMap := (C.int)(toggle), cgoAllocsUnknown
	C.player_set_streamed(cp, ctoggle)
	runtime.KeepAlive(ctoggleAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_invincible function as declared in out/capi.h:787
func Player_get_invincible(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_invincible(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_set_invincible function as declared in out/capi.h:788
func Player_set_invincible(p unsafe.Pointer, toggle int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ctoggle, ctoggleAllocMap := (C.int)(toggle), cgoAllocsUnknown
	C.player_set_invincible(cp, ctoggle)
	runtime.KeepAlive(ctoggleAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_into_vehicle function as declared in out/capi.h:789
func Player_set_into_vehicle(p unsafe.Pointer, v unsafe.Pointer, seat byte) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cv, cvAllocMap := v, cgoAllocsUnknown
	cseat, cseatAllocMap := (C.uchar)(seat), cgoAllocsUnknown
	C.player_set_into_vehicle(cp, cv, cseat)
	runtime.KeepAlive(cseatAllocMap)
	runtime.KeepAlive(cvAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_is_frozen function as declared in out/capi.h:790
func Player_is_frozen(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_is_frozen(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_set_frozen function as declared in out/capi.h:791
func Player_set_frozen(p unsafe.Pointer, state int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.player_set_frozen(cp, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_has_collision function as declared in out/capi.h:792
func Player_has_collision(p unsafe.Pointer) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_has_collision(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_set_collision function as declared in out/capi.h:793
func Player_set_collision(p unsafe.Pointer, state int32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.player_set_collision(cp, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_play_ambient_speech function as declared in out/capi.h:794
func Player_play_ambient_speech(p unsafe.Pointer, speechName string, speechParam string, speechDictHash uint32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cspeechName, cspeechNameAllocMap := unpackPCharString(speechName)
	cspeechParam, cspeechParamAllocMap := unpackPCharString(speechParam)
	cspeechDictHash, cspeechDictHashAllocMap := (C.uint)(speechDictHash), cgoAllocsUnknown
	C.player_play_ambient_speech(cp, cspeechName, cspeechParam, cspeechDictHash)
	runtime.KeepAlive(cspeechDictHashAllocMap)
	runtime.KeepAlive(cspeechParamAllocMap)
	runtime.KeepAlive(cspeechNameAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_set_head_overlay function as declared in out/capi.h:795
func Player_set_head_overlay(p unsafe.Pointer, overlayID byte, index byte, opacity float32) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	coverlayID, coverlayIDAllocMap := (C.uchar)(overlayID), cgoAllocsUnknown
	cindex, cindexAllocMap := (C.uchar)(index), cgoAllocsUnknown
	copacity, copacityAllocMap := (C.float)(opacity), cgoAllocsUnknown
	__ret := C.player_set_head_overlay(cp, coverlayID, cindex, copacity)
	runtime.KeepAlive(copacityAllocMap)
	runtime.KeepAlive(cindexAllocMap)
	runtime.KeepAlive(coverlayIDAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_remove_head_overlay function as declared in out/capi.h:796
func Player_remove_head_overlay(p unsafe.Pointer, overlayID byte) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	coverlayID, coverlayIDAllocMap := (C.uchar)(overlayID), cgoAllocsUnknown
	__ret := C.player_remove_head_overlay(cp, coverlayID)
	runtime.KeepAlive(coverlayIDAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_set_head_overlay_color function as declared in out/capi.h:797
func Player_set_head_overlay_color(p unsafe.Pointer, overlayID byte, colorType byte, colorIndex byte, secondColorIndex byte) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	coverlayID, coverlayIDAllocMap := (C.uchar)(overlayID), cgoAllocsUnknown
	ccolorType, ccolorTypeAllocMap := (C.uchar)(colorType), cgoAllocsUnknown
	ccolorIndex, ccolorIndexAllocMap := (C.uchar)(colorIndex), cgoAllocsUnknown
	csecondColorIndex, csecondColorIndexAllocMap := (C.uchar)(secondColorIndex), cgoAllocsUnknown
	__ret := C.player_set_head_overlay_color(cp, coverlayID, ccolorType, ccolorIndex, csecondColorIndex)
	runtime.KeepAlive(csecondColorIndexAllocMap)
	runtime.KeepAlive(ccolorIndexAllocMap)
	runtime.KeepAlive(ccolorTypeAllocMap)
	runtime.KeepAlive(coverlayIDAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_head_overlay function as declared in out/capi.h:799
func Player_get_head_overlay(p unsafe.Pointer, overlayID byte) HeadOverlay {
	cp, cpAllocMap := p, cgoAllocsUnknown
	coverlayID, coverlayIDAllocMap := (C.uchar)(overlayID), cgoAllocsUnknown
	__ret := C.player_get_head_overlay(cp, coverlayID)
	runtime.KeepAlive(coverlayIDAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewHeadOverlayRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_face_feature function as declared in out/capi.h:800
func Player_set_face_feature(p unsafe.Pointer, index byte, scale float32) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cindex, cindexAllocMap := (C.uchar)(index), cgoAllocsUnknown
	cscale, cscaleAllocMap := (C.float)(scale), cgoAllocsUnknown
	__ret := C.player_set_face_feature(cp, cindex, cscale)
	runtime.KeepAlive(cscaleAllocMap)
	runtime.KeepAlive(cindexAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_face_feature_scale function as declared in out/capi.h:801
func Player_get_face_feature_scale(p unsafe.Pointer, index byte) float32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cindex, cindexAllocMap := (C.uchar)(index), cgoAllocsUnknown
	__ret := C.player_get_face_feature_scale(cp, cindex)
	runtime.KeepAlive(cindexAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Player_remove_face_feature function as declared in out/capi.h:802
func Player_remove_face_feature(p unsafe.Pointer, index byte) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cindex, cindexAllocMap := (C.uchar)(index), cgoAllocsUnknown
	__ret := C.player_remove_face_feature(cp, cindex)
	runtime.KeepAlive(cindexAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_set_head_blend_palette_color function as declared in out/capi.h:803
func Player_set_head_blend_palette_color(p unsafe.Pointer, id byte, red byte, green byte, blue byte) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cid, cidAllocMap := (C.uchar)(id), cgoAllocsUnknown
	cred, credAllocMap := (C.uchar)(red), cgoAllocsUnknown
	cgreen, cgreenAllocMap := (C.uchar)(green), cgoAllocsUnknown
	cblue, cblueAllocMap := (C.uchar)(blue), cgoAllocsUnknown
	__ret := C.player_set_head_blend_palette_color(cp, cid, cred, cgreen, cblue)
	runtime.KeepAlive(cblueAllocMap)
	runtime.KeepAlive(cgreenAllocMap)
	runtime.KeepAlive(credAllocMap)
	runtime.KeepAlive(cidAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_head_blend_palette_color function as declared in out/capi.h:804
func Player_get_head_blend_palette_color(p unsafe.Pointer, id byte) RGBA {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cid, cidAllocMap := (C.uchar)(id), cgoAllocsUnknown
	__ret := C.player_get_head_blend_palette_color(cp, cid)
	runtime.KeepAlive(cidAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewRGBARef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_head_blend_data function as declared in out/capi.h:805
func Player_set_head_blend_data(p unsafe.Pointer, shapeFirstID uint32, shapeSecondID uint32, shapeThirdID uint32, skinFirstID uint32, skinSecondID uint32, skinThirdID uint32, shapeMix float32, skinMix float32, thirdMix float32) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	cshapeFirstID, cshapeFirstIDAllocMap := (C.uint)(shapeFirstID), cgoAllocsUnknown
	cshapeSecondID, cshapeSecondIDAllocMap := (C.uint)(shapeSecondID), cgoAllocsUnknown
	cshapeThirdID, cshapeThirdIDAllocMap := (C.uint)(shapeThirdID), cgoAllocsUnknown
	cskinFirstID, cskinFirstIDAllocMap := (C.uint)(skinFirstID), cgoAllocsUnknown
	cskinSecondID, cskinSecondIDAllocMap := (C.uint)(skinSecondID), cgoAllocsUnknown
	cskinThirdID, cskinThirdIDAllocMap := (C.uint)(skinThirdID), cgoAllocsUnknown
	cshapeMix, cshapeMixAllocMap := (C.float)(shapeMix), cgoAllocsUnknown
	cskinMix, cskinMixAllocMap := (C.float)(skinMix), cgoAllocsUnknown
	cthirdMix, cthirdMixAllocMap := (C.float)(thirdMix), cgoAllocsUnknown
	C.player_set_head_blend_data(cp, cshapeFirstID, cshapeSecondID, cshapeThirdID, cskinFirstID, cskinSecondID, cskinThirdID, cshapeMix, cskinMix, cthirdMix)
	runtime.KeepAlive(cthirdMixAllocMap)
	runtime.KeepAlive(cskinMixAllocMap)
	runtime.KeepAlive(cshapeMixAllocMap)
	runtime.KeepAlive(cskinThirdIDAllocMap)
	runtime.KeepAlive(cskinSecondIDAllocMap)
	runtime.KeepAlive(cskinFirstIDAllocMap)
	runtime.KeepAlive(cshapeThirdIDAllocMap)
	runtime.KeepAlive(cshapeSecondIDAllocMap)
	runtime.KeepAlive(cshapeFirstIDAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_head_blend_data function as declared in out/capi.h:808
func Player_get_head_blend_data(p unsafe.Pointer) HeadBlendData {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_head_blend_data(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewHeadBlendDataRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_set_eye_color function as declared in out/capi.h:809
func Player_set_eye_color(p unsafe.Pointer, eyeColor int16) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ceyeColor, ceyeColorAllocMap := (C.short)(eyeColor), cgoAllocsUnknown
	__ret := C.player_set_eye_color(cp, ceyeColor)
	runtime.KeepAlive(ceyeColorAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_get_eye_color function as declared in out/capi.h:810
func Player_get_eye_color(p unsafe.Pointer) int16 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_eye_color(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (int16)(__ret)
	return __v
}

// Player_set_hair_color function as declared in out/capi.h:811
func Player_set_hair_color(p unsafe.Pointer, hairColor byte) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	chairColor, chairColorAllocMap := (C.uchar)(hairColor), cgoAllocsUnknown
	C.player_set_hair_color(cp, chairColor)
	runtime.KeepAlive(chairColorAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_hair_color function as declared in out/capi.h:812
func Player_get_hair_color(p unsafe.Pointer) byte {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_hair_color(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (byte)(__ret)
	return __v
}

// Player_set_hair_highlight_color function as declared in out/capi.h:813
func Player_set_hair_highlight_color(p unsafe.Pointer, hairHighlightColor byte) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	chairHighlightColor, chairHighlightColorAllocMap := (C.uchar)(hairHighlightColor), cgoAllocsUnknown
	C.player_set_hair_highlight_color(cp, chairHighlightColor)
	runtime.KeepAlive(chairHighlightColorAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_hair_highlight_color function as declared in out/capi.h:814
func Player_get_hair_highlight_color(p unsafe.Pointer) byte {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_hair_highlight_color(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := (byte)(__ret)
	return __v
}

// Player_get_weapons function as declared in out/capi.h:815
func Player_get_weapons(p unsafe.Pointer) Array {
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.player_get_weapons(cp)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_has_local_meta_data function as declared in out/capi.h:816
func Player_has_local_meta_data(p unsafe.Pointer, key string) int32 {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.player_has_local_meta_data(cp, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Player_set_local_meta_data function as declared in out/capi.h:817
func Player_set_local_meta_data(p unsafe.Pointer, key string, data []byte, size uint64) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.player_set_local_meta_data(cp, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Player_get_local_meta_data function as declared in out/capi.h:818
func Player_get_local_meta_data(p unsafe.Pointer, key string) Array {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.player_get_local_meta_data(cp, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cpAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Player_delete_local_meta_data function as declared in out/capi.h:819
func Player_delete_local_meta_data(p unsafe.Pointer, key string) {
	cp, cpAllocMap := p, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.player_delete_local_meta_data(cp, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cpAllocMap)
}

// Resource_is_started function as declared in out/capi.h:836
func Resource_is_started(r unsafe.Pointer) byte {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_is_started(cr)
	runtime.KeepAlive(crAllocMap)
	__v := (byte)(__ret)
	return __v
}

// Resource_get_type function as declared in out/capi.h:837
func Resource_get_type(r unsafe.Pointer) string {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_type(cr)
	runtime.KeepAlive(crAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Resource_get_name function as declared in out/capi.h:838
func Resource_get_name(r unsafe.Pointer) string {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_name(cr)
	runtime.KeepAlive(crAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Resource_get_main function as declared in out/capi.h:839
func Resource_get_main(r unsafe.Pointer) string {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_main(cr)
	runtime.KeepAlive(crAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Resource_get_config function as declared in out/capi.h:840
func Resource_get_config(r unsafe.Pointer) Array {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_config(cr)
	runtime.KeepAlive(crAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Resource_get_exports function as declared in out/capi.h:841
func Resource_get_exports(r unsafe.Pointer) Array {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_exports(cr)
	runtime.KeepAlive(crAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Resource_get_dependencies function as declared in out/capi.h:842
func Resource_get_dependencies(r unsafe.Pointer) Array {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_dependencies(cr)
	runtime.KeepAlive(crAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Resource_get_dependants function as declared in out/capi.h:843
func Resource_get_dependants(r unsafe.Pointer) Array {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_dependants(cr)
	runtime.KeepAlive(crAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Resource_get_required_permissions function as declared in out/capi.h:844
func Resource_get_required_permissions(r unsafe.Pointer) Array {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_required_permissions(cr)
	runtime.KeepAlive(crAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Resource_get_optional_permissions function as declared in out/capi.h:845
func Resource_get_optional_permissions(r unsafe.Pointer) Array {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_optional_permissions(cr)
	runtime.KeepAlive(crAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Resource_get_path function as declared in out/capi.h:846
func Resource_get_path(r unsafe.Pointer) string {
	cr, crAllocMap := r, cgoAllocsUnknown
	__ret := C.resource_get_path(cr)
	runtime.KeepAlive(crAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Runtime_register_alt_event function as declared in out/capi.h:861
func Runtime_register_alt_event(resourceName string, eventType uint16) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	ceventType, ceventTypeAllocMap := (C.ushort)(eventType), cgoAllocsUnknown
	__ret := C.runtime_register_alt_event(cresourceName, ceventType)
	runtime.KeepAlive(ceventTypeAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Runtime_unregister_alt_event function as declared in out/capi.h:862
func Runtime_unregister_alt_event(resourceName string, eventType uint16) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	ceventType, ceventTypeAllocMap := (C.ushort)(eventType), cgoAllocsUnknown
	__ret := C.runtime_unregister_alt_event(cresourceName, ceventType)
	runtime.KeepAlive(ceventTypeAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Runtime_register_alt_export function as declared in out/capi.h:863
func Runtime_register_alt_export(resourceName string, exportName string, data []byte, size uint64) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	cexportName, cexportNameAllocMap := unpackPCharString(exportName)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	__ret := C.runtime_register_alt_export(cresourceName, cexportName, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(cexportNameAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Runtime_get_alt_export function as declared in out/capi.h:864
func Runtime_get_alt_export(targetResourceName string, exportName string) Array {
	ctargetResourceName, ctargetResourceNameAllocMap := unpackPCharString(targetResourceName)
	cexportName, cexportNameAllocMap := unpackPCharString(exportName)
	__ret := C.runtime_get_alt_export(ctargetResourceName, cexportName)
	runtime.KeepAlive(cexportNameAllocMap)
	runtime.KeepAlive(ctargetResourceNameAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Runtime_create_m_value_function function as declared in out/capi.h:865
func Runtime_create_m_value_function(resourceName string, id uint64) unsafe.Pointer {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	cid, cidAllocMap := (C.ulonglong)(id), cgoAllocsUnknown
	__ret := C.runtime_create_m_value_function(cresourceName, cid)
	runtime.KeepAlive(cidAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Runtime_call_m_value_function function as declared in out/capi.h:866
func Runtime_call_m_value_function(ptr unsafe.Pointer, args Array) Array {
	cptr, cptrAllocMap := ptr, cgoAllocsUnknown
	cargs, cargsAllocMap := args.PassValue()
	__ret := C.runtime_call_m_value_function(cptr, cargs)
	runtime.KeepAlive(cargsAllocMap)
	runtime.KeepAlive(cptrAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Connection_accept function as declared in out/capi.h:867
func Connection_accept(handle unsafe.Pointer) {
	chandle, chandleAllocMap := handle, cgoAllocsUnknown
	C.connection_accept(chandle)
	runtime.KeepAlive(chandleAllocMap)
}

// Connection_decline function as declared in out/capi.h:868
func Connection_decline(handle unsafe.Pointer, reason string) {
	chandle, chandleAllocMap := handle, cgoAllocsUnknown
	creason, creasonAllocMap := unpackPCharString(reason)
	C.connection_decline(chandle, creason)
	runtime.KeepAlive(creasonAllocMap)
	runtime.KeepAlive(chandleAllocMap)
}

// Connection_is_accepted function as declared in out/capi.h:869
func Connection_is_accepted(handle unsafe.Pointer) int32 {
	chandle, chandleAllocMap := handle, cgoAllocsUnknown
	__ret := C.connection_is_accepted(chandle)
	runtime.KeepAlive(chandleAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_has_meta_data function as declared in out/capi.h:1083
func Vehicle_has_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.vehicle_has_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_meta_data function as declared in out/capi.h:1084
func Vehicle_get_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.vehicle_get_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_meta_data function as declared in out/capi.h:1085
func Vehicle_set_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.vehicle_set_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Vehicle_delete_meta_data function as declared in out/capi.h:1086
func Vehicle_delete_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.vehicle_delete_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Vehicle_has_synced_meta_data function as declared in out/capi.h:1087
func Vehicle_has_synced_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.vehicle_has_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_synced_meta_data function as declared in out/capi.h:1088
func Vehicle_get_synced_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.vehicle_get_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_synced_meta_data function as declared in out/capi.h:1089
func Vehicle_set_synced_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.vehicle_set_synced_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Vehicle_delete_synced_meta_data function as declared in out/capi.h:1090
func Vehicle_delete_synced_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.vehicle_delete_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Vehicle_has_stream_synced_meta_data function as declared in out/capi.h:1091
func Vehicle_has_stream_synced_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.vehicle_has_stream_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_stream_synced_meta_data function as declared in out/capi.h:1092
func Vehicle_get_stream_synced_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.vehicle_get_stream_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_stream_synced_meta_data function as declared in out/capi.h:1093
func Vehicle_set_stream_synced_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.vehicle_set_stream_synced_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Vehicle_delete_stream_synced_meta_data function as declared in out/capi.h:1094
func Vehicle_delete_stream_synced_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.vehicle_delete_stream_synced_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Vehicle_get_position function as declared in out/capi.h:1095
func Vehicle_get_position(v unsafe.Pointer) Position {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_position(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *NewPositionRef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_position function as declared in out/capi.h:1096
func Vehicle_set_position(v unsafe.Pointer, x float32, y float32, z float32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cx, cxAllocMap := (C.float)(x), cgoAllocsUnknown
	cy, cyAllocMap := (C.float)(y), cgoAllocsUnknown
	cz, czAllocMap := (C.float)(z), cgoAllocsUnknown
	C.vehicle_set_position(cv, cx, cy, cz)
	runtime.KeepAlive(czAllocMap)
	runtime.KeepAlive(cyAllocMap)
	runtime.KeepAlive(cxAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_rotation function as declared in out/capi.h:1097
func Vehicle_get_rotation(v unsafe.Pointer) Rotation {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_rotation(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *NewRotationRef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_rotation function as declared in out/capi.h:1098
func Vehicle_set_rotation(v unsafe.Pointer, roll float32, pitch float32, yaw float32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	croll, crollAllocMap := (C.float)(roll), cgoAllocsUnknown
	cpitch, cpitchAllocMap := (C.float)(pitch), cgoAllocsUnknown
	cyaw, cyawAllocMap := (C.float)(yaw), cgoAllocsUnknown
	C.vehicle_set_rotation(cv, croll, cpitch, cyaw)
	runtime.KeepAlive(cyawAllocMap)
	runtime.KeepAlive(cpitchAllocMap)
	runtime.KeepAlive(crollAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_dimension function as declared in out/capi.h:1099
func Vehicle_get_dimension(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_dimension(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_dimension function as declared in out/capi.h:1100
func Vehicle_set_dimension(v unsafe.Pointer, dimension int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cdimension, cdimensionAllocMap := (C.long)(dimension), cgoAllocsUnknown
	C.vehicle_set_dimension(cv, cdimension)
	runtime.KeepAlive(cdimensionAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_i_d function as declared in out/capi.h:1101
func Vehicle_get_i_d(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_i_d(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_model function as declared in out/capi.h:1102
func Vehicle_get_model(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_model(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_detach function as declared in out/capi.h:1103
func Vehicle_detach(v unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	C.vehicle_detach(cv)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_attach_to_entity function as declared in out/capi.h:1104
func Vehicle_attach_to_entity(v unsafe.Pointer, e Entity, otherBoneIndex int32, myBoneIndex int32, position Position, rotation Rotation, collision int32, noFixedRotation int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ce, ceAllocMap := e.PassValue()
	cotherBoneIndex, cotherBoneIndexAllocMap := (C.int)(otherBoneIndex), cgoAllocsUnknown
	cmyBoneIndex, cmyBoneIndexAllocMap := (C.int)(myBoneIndex), cgoAllocsUnknown
	cposition, cpositionAllocMap := position.PassValue()
	crotation, crotationAllocMap := rotation.PassValue()
	ccollision, ccollisionAllocMap := (C.int)(collision), cgoAllocsUnknown
	cnoFixedRotation, cnoFixedRotationAllocMap := (C.int)(noFixedRotation), cgoAllocsUnknown
	C.vehicle_attach_to_entity(cv, ce, cotherBoneIndex, cmyBoneIndex, cposition, crotation, ccollision, cnoFixedRotation)
	runtime.KeepAlive(cnoFixedRotationAllocMap)
	runtime.KeepAlive(ccollisionAllocMap)
	runtime.KeepAlive(crotationAllocMap)
	runtime.KeepAlive(cpositionAllocMap)
	runtime.KeepAlive(cmyBoneIndexAllocMap)
	runtime.KeepAlive(cotherBoneIndexAllocMap)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_visible function as declared in out/capi.h:1106
func Vehicle_set_visible(v unsafe.Pointer, toggle int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ctoggle, ctoggleAllocMap := (C.int)(toggle), cgoAllocsUnknown
	C.vehicle_set_visible(cv, ctoggle)
	runtime.KeepAlive(ctoggleAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_visible function as declared in out/capi.h:1107
func Vehicle_get_visible(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_visible(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_network_owner function as declared in out/capi.h:1108
func Vehicle_get_network_owner(v unsafe.Pointer) unsafe.Pointer {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_network_owner(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_network_owner function as declared in out/capi.h:1109
func Vehicle_set_network_owner(v unsafe.Pointer, owner unsafe.Pointer, disableMigration int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cowner, cownerAllocMap := owner, cgoAllocsUnknown
	cdisableMigration, cdisableMigrationAllocMap := (C.int)(disableMigration), cgoAllocsUnknown
	C.vehicle_set_network_owner(cv, cowner, cdisableMigration)
	runtime.KeepAlive(cdisableMigrationAllocMap)
	runtime.KeepAlive(cownerAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_driver function as declared in out/capi.h:1110
func Vehicle_get_driver(v unsafe.Pointer) unsafe.Pointer {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_driver(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_is_destroyed function as declared in out/capi.h:1111
func Vehicle_is_destroyed(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_destroyed(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_mod function as declared in out/capi.h:1112
func Vehicle_get_mod(v unsafe.Pointer, category uint32) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccategory, ccategoryAllocMap := (C.uint)(category), cgoAllocsUnknown
	__ret := C.vehicle_get_mod(cv, ccategory)
	runtime.KeepAlive(ccategoryAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_mods_count function as declared in out/capi.h:1113
func Vehicle_get_mods_count(v unsafe.Pointer, category uint32) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccategory, ccategoryAllocMap := (C.uint)(category), cgoAllocsUnknown
	__ret := C.vehicle_get_mods_count(cv, ccategory)
	runtime.KeepAlive(ccategoryAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_mod_kits_count function as declared in out/capi.h:1114
func Vehicle_get_mod_kits_count(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_mod_kits_count(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_mod_kit function as declared in out/capi.h:1115
func Vehicle_get_mod_kit(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_mod_kit(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_is_primary_color_r_g_b function as declared in out/capi.h:1116
func Vehicle_is_primary_color_r_g_b(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_primary_color_r_g_b(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_primary_color function as declared in out/capi.h:1117
func Vehicle_get_primary_color(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_primary_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_primary_color_r_g_b function as declared in out/capi.h:1118
func Vehicle_get_primary_color_r_g_b(v unsafe.Pointer) RGBA {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_primary_color_r_g_b(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *NewRGBARef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_is_secondary_color_r_g_b function as declared in out/capi.h:1119
func Vehicle_is_secondary_color_r_g_b(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_secondary_color_r_g_b(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_secondary_color function as declared in out/capi.h:1120
func Vehicle_get_secondary_color(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_secondary_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_secondary_color_r_g_b function as declared in out/capi.h:1121
func Vehicle_get_secondary_color_r_g_b(v unsafe.Pointer) RGBA {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_secondary_color_r_g_b(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *NewRGBARef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_get_pearl_color function as declared in out/capi.h:1122
func Vehicle_get_pearl_color(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_pearl_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_wheel_color function as declared in out/capi.h:1123
func Vehicle_get_wheel_color(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_wheel_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_interior_color function as declared in out/capi.h:1124
func Vehicle_get_interior_color(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_interior_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_dashboard_color function as declared in out/capi.h:1125
func Vehicle_get_dashboard_color(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_dashboard_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_is_tire_smoke_color_custom function as declared in out/capi.h:1126
func Vehicle_is_tire_smoke_color_custom(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_tire_smoke_color_custom(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_tire_smoke_color function as declared in out/capi.h:1127
func Vehicle_get_tire_smoke_color(v unsafe.Pointer) RGBA {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_tire_smoke_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *NewRGBARef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_get_wheel_type function as declared in out/capi.h:1128
func Vehicle_get_wheel_type(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_wheel_type(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_wheel_variation function as declared in out/capi.h:1129
func Vehicle_get_wheel_variation(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_wheel_variation(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_rear_wheel_variation function as declared in out/capi.h:1130
func Vehicle_get_rear_wheel_variation(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_rear_wheel_variation(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_custom_tires function as declared in out/capi.h:1131
func Vehicle_get_custom_tires(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_custom_tires(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_special_darkness function as declared in out/capi.h:1132
func Vehicle_get_special_darkness(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_special_darkness(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_numberplate_index function as declared in out/capi.h:1133
func Vehicle_get_numberplate_index(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_numberplate_index(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_numberplate_text function as declared in out/capi.h:1134
func Vehicle_get_numberplate_text(v unsafe.Pointer) string {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_numberplate_text(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Vehicle_get_window_tint function as declared in out/capi.h:1135
func Vehicle_get_window_tint(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_window_tint(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_dirt_level function as declared in out/capi.h:1136
func Vehicle_get_dirt_level(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_dirt_level(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_is_extra_on function as declared in out/capi.h:1137
func Vehicle_is_extra_on(v unsafe.Pointer, extraID uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cextraID, cextraIDAllocMap := (C.uint)(extraID), cgoAllocsUnknown
	__ret := C.vehicle_is_extra_on(cv, cextraID)
	runtime.KeepAlive(cextraIDAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_neon_active function as declared in out/capi.h:1138
func Vehicle_is_neon_active(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_neon_active(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_neon_active function as declared in out/capi.h:1139
func Vehicle_get_neon_active(v unsafe.Pointer) VehicleNeonState {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_neon_active(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *NewVehicleNeonStateRef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_get_neon_color function as declared in out/capi.h:1140
func Vehicle_get_neon_color(v unsafe.Pointer) RGBA {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_neon_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *NewRGBARef(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_get_livery function as declared in out/capi.h:1141
func Vehicle_get_livery(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_livery(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_roof_livery function as declared in out/capi.h:1142
func Vehicle_get_roof_livery(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_roof_livery(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_appearance_data_base64 function as declared in out/capi.h:1143
func Vehicle_get_appearance_data_base64(v unsafe.Pointer) string {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_appearance_data_base64(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Vehicle_is_engine_on function as declared in out/capi.h:1144
func Vehicle_is_engine_on(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_engine_on(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_handbrake_active function as declared in out/capi.h:1145
func Vehicle_is_handbrake_active(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_handbrake_active(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_headlight_color function as declared in out/capi.h:1146
func Vehicle_get_headlight_color(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_headlight_color(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_radio_station_index function as declared in out/capi.h:1147
func Vehicle_get_radio_station_index(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_radio_station_index(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_is_siren_active function as declared in out/capi.h:1148
func Vehicle_is_siren_active(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_siren_active(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_lock_state function as declared in out/capi.h:1149
func Vehicle_get_lock_state(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_lock_state(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_door_state function as declared in out/capi.h:1150
func Vehicle_get_door_state(v unsafe.Pointer, doorId uint32) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cdoorId, cdoorIdAllocMap := (C.uint)(doorId), cgoAllocsUnknown
	__ret := C.vehicle_get_door_state(cv, cdoorId)
	runtime.KeepAlive(cdoorIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_is_window_opened function as declared in out/capi.h:1151
func Vehicle_is_window_opened(v unsafe.Pointer, windowId uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwindowId, cwindowIdAllocMap := (C.uint)(windowId), cgoAllocsUnknown
	__ret := C.vehicle_is_window_opened(cv, cwindowId)
	runtime.KeepAlive(cwindowIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_daylight_on function as declared in out/capi.h:1152
func Vehicle_is_daylight_on(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_daylight_on(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_nightlight_on function as declared in out/capi.h:1153
func Vehicle_is_nightlight_on(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_nightlight_on(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_roof_state function as declared in out/capi.h:1154
func Vehicle_get_roof_state(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_roof_state(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_is_flamethrower_active function as declared in out/capi.h:1155
func Vehicle_is_flamethrower_active(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_flamethrower_active(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_lights_multiplier function as declared in out/capi.h:1156
func Vehicle_get_lights_multiplier(v unsafe.Pointer) float32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_lights_multiplier(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Vehicle_get_game_state_base64 function as declared in out/capi.h:1157
func Vehicle_get_game_state_base64(v unsafe.Pointer) string {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_game_state_base64(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Vehicle_get_engine_health function as declared in out/capi.h:1158
func Vehicle_get_engine_health(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_engine_health(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_petrol_tank_health function as declared in out/capi.h:1159
func Vehicle_get_petrol_tank_health(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_petrol_tank_health(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_wheels_count function as declared in out/capi.h:1160
func Vehicle_get_wheels_count(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_wheels_count(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_is_wheel_burst function as declared in out/capi.h:1161
func Vehicle_is_wheel_burst(v unsafe.Pointer, wheelId uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	__ret := C.vehicle_is_wheel_burst(cv, cwheelId)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_does_wheel_has_tire function as declared in out/capi.h:1162
func Vehicle_does_wheel_has_tire(v unsafe.Pointer, wheelId uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	__ret := C.vehicle_does_wheel_has_tire(cv, cwheelId)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_wheel_detached function as declared in out/capi.h:1163
func Vehicle_is_wheel_detached(v unsafe.Pointer, wheelId uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	__ret := C.vehicle_is_wheel_detached(cv, cwheelId)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_wheel_on_fire function as declared in out/capi.h:1164
func Vehicle_is_wheel_on_fire(v unsafe.Pointer, wheelId uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	__ret := C.vehicle_is_wheel_on_fire(cv, cwheelId)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_wheel_health function as declared in out/capi.h:1165
func Vehicle_get_wheel_health(v unsafe.Pointer, wheelId uint32) float32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	__ret := C.vehicle_get_wheel_health(cv, cwheelId)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Vehicle_get_repairs_count function as declared in out/capi.h:1166
func Vehicle_get_repairs_count(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_repairs_count(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_body_health function as declared in out/capi.h:1167
func Vehicle_get_body_health(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_body_health(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_body_additional_health function as declared in out/capi.h:1168
func Vehicle_get_body_additional_health(v unsafe.Pointer) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_body_additional_health(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_health_data_base64 function as declared in out/capi.h:1169
func Vehicle_get_health_data_base64(v unsafe.Pointer) string {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_health_data_base64(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Vehicle_get_part_damage_level function as declared in out/capi.h:1170
func Vehicle_get_part_damage_level(v unsafe.Pointer, partId uint32) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cpartId, cpartIdAllocMap := (C.uint)(partId), cgoAllocsUnknown
	__ret := C.vehicle_get_part_damage_level(cv, cpartId)
	runtime.KeepAlive(cpartIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_part_bullet_holes function as declared in out/capi.h:1171
func Vehicle_get_part_bullet_holes(v unsafe.Pointer, partId uint32) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cpartId, cpartIdAllocMap := (C.uint)(partId), cgoAllocsUnknown
	__ret := C.vehicle_get_part_bullet_holes(cv, cpartId)
	runtime.KeepAlive(cpartIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_is_light_damaged function as declared in out/capi.h:1172
func Vehicle_is_light_damaged(v unsafe.Pointer, lightId uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	clightId, clightIdAllocMap := (C.uint)(lightId), cgoAllocsUnknown
	__ret := C.vehicle_is_light_damaged(cv, clightId)
	runtime.KeepAlive(clightIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_window_damaged function as declared in out/capi.h:1173
func Vehicle_is_window_damaged(v unsafe.Pointer, windowId uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwindowId, cwindowIdAllocMap := (C.uint)(windowId), cgoAllocsUnknown
	__ret := C.vehicle_is_window_damaged(cv, cwindowId)
	runtime.KeepAlive(cwindowIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_special_light_damaged function as declared in out/capi.h:1174
func Vehicle_is_special_light_damaged(v unsafe.Pointer, specialLightId uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cspecialLightId, cspecialLightIdAllocMap := (C.uint)(specialLightId), cgoAllocsUnknown
	__ret := C.vehicle_is_special_light_damaged(cv, cspecialLightId)
	runtime.KeepAlive(cspecialLightIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_has_armored_windows function as declared in out/capi.h:1175
func Vehicle_has_armored_windows(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_has_armored_windows(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_armored_window_health function as declared in out/capi.h:1176
func Vehicle_get_armored_window_health(v unsafe.Pointer, windowId uint32) float32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwindowId, cwindowIdAllocMap := (C.uint)(windowId), cgoAllocsUnknown
	__ret := C.vehicle_get_armored_window_health(cv, cwindowId)
	runtime.KeepAlive(cwindowIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Vehicle_get_armored_window_shoot_count function as declared in out/capi.h:1177
func Vehicle_get_armored_window_shoot_count(v unsafe.Pointer, windowId uint32) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwindowId, cwindowIdAllocMap := (C.uint)(windowId), cgoAllocsUnknown
	__ret := C.vehicle_get_armored_window_shoot_count(cv, cwindowId)
	runtime.KeepAlive(cwindowIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_bumper_damage_level function as declared in out/capi.h:1178
func Vehicle_get_bumper_damage_level(v unsafe.Pointer, bumperId uint32) uint32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cbumperId, cbumperIdAllocMap := (C.uint)(bumperId), cgoAllocsUnknown
	__ret := C.vehicle_get_bumper_damage_level(cv, cbumperId)
	runtime.KeepAlive(cbumperIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint32)(__ret)
	return __v
}

// Vehicle_get_damage_data_base64 function as declared in out/capi.h:1179
func Vehicle_get_damage_data_base64(v unsafe.Pointer) string {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_damage_data_base64(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Vehicle_is_manual_engine_control function as declared in out/capi.h:1180
func Vehicle_is_manual_engine_control(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_manual_engine_control(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_script_data_base64 function as declared in out/capi.h:1181
func Vehicle_get_script_data_base64(v unsafe.Pointer) string {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_script_data_base64(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := packPCharString(__ret)
	return __v
}

// Vehicle_toggle_extra function as declared in out/capi.h:1182
func Vehicle_toggle_extra(v unsafe.Pointer, extraID uint32, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cextraID, cextraIDAllocMap := (C.uint)(extraID), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_toggle_extra(cv, cextraID, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cextraIDAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_fixed function as declared in out/capi.h:1183
func Vehicle_set_fixed(v unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	C.vehicle_set_fixed(cv)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_mod function as declared in out/capi.h:1184
func Vehicle_set_mod(v unsafe.Pointer, category uint32, id uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccategory, ccategoryAllocMap := (C.uint)(category), cgoAllocsUnknown
	cid, cidAllocMap := (C.uint)(id), cgoAllocsUnknown
	__ret := C.vehicle_set_mod(cv, ccategory, cid)
	runtime.KeepAlive(cidAllocMap)
	runtime.KeepAlive(ccategoryAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_mod_kit function as declared in out/capi.h:1185
func Vehicle_set_mod_kit(v unsafe.Pointer, id uint32) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cid, cidAllocMap := (C.uint)(id), cgoAllocsUnknown
	__ret := C.vehicle_set_mod_kit(cv, cid)
	runtime.KeepAlive(cidAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_primary_color function as declared in out/capi.h:1186
func Vehicle_set_primary_color(v unsafe.Pointer, color uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccolor, ccolorAllocMap := (C.uint)(color), cgoAllocsUnknown
	C.vehicle_set_primary_color(cv, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_primary_color_r_g_b function as declared in out/capi.h:1187
func Vehicle_set_primary_color_r_g_b(v unsafe.Pointer, r uint32, g uint32, b uint32, a uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cr, crAllocMap := (C.uint)(r), cgoAllocsUnknown
	cg, cgAllocMap := (C.uint)(g), cgoAllocsUnknown
	cb, cbAllocMap := (C.uint)(b), cgoAllocsUnknown
	ca, caAllocMap := (C.uint)(a), cgoAllocsUnknown
	C.vehicle_set_primary_color_r_g_b(cv, cr, cg, cb, ca)
	runtime.KeepAlive(caAllocMap)
	runtime.KeepAlive(cbAllocMap)
	runtime.KeepAlive(cgAllocMap)
	runtime.KeepAlive(crAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_secondary_color function as declared in out/capi.h:1188
func Vehicle_set_secondary_color(v unsafe.Pointer, color uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccolor, ccolorAllocMap := (C.uint)(color), cgoAllocsUnknown
	C.vehicle_set_secondary_color(cv, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_secondary_color_r_g_b function as declared in out/capi.h:1189
func Vehicle_set_secondary_color_r_g_b(v unsafe.Pointer, r uint32, g uint32, b uint32, a uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cr, crAllocMap := (C.uint)(r), cgoAllocsUnknown
	cg, cgAllocMap := (C.uint)(g), cgoAllocsUnknown
	cb, cbAllocMap := (C.uint)(b), cgoAllocsUnknown
	ca, caAllocMap := (C.uint)(a), cgoAllocsUnknown
	C.vehicle_set_secondary_color_r_g_b(cv, cr, cg, cb, ca)
	runtime.KeepAlive(caAllocMap)
	runtime.KeepAlive(cbAllocMap)
	runtime.KeepAlive(cgAllocMap)
	runtime.KeepAlive(crAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_pearl_color function as declared in out/capi.h:1190
func Vehicle_set_pearl_color(v unsafe.Pointer, color uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccolor, ccolorAllocMap := (C.uint)(color), cgoAllocsUnknown
	C.vehicle_set_pearl_color(cv, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_wheel_color function as declared in out/capi.h:1191
func Vehicle_set_wheel_color(v unsafe.Pointer, color uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccolor, ccolorAllocMap := (C.uint)(color), cgoAllocsUnknown
	C.vehicle_set_wheel_color(cv, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_interior_color function as declared in out/capi.h:1192
func Vehicle_set_interior_color(v unsafe.Pointer, color uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccolor, ccolorAllocMap := (C.uint)(color), cgoAllocsUnknown
	C.vehicle_set_interior_color(cv, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_dashboard_color function as declared in out/capi.h:1193
func Vehicle_set_dashboard_color(v unsafe.Pointer, color uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccolor, ccolorAllocMap := (C.uint)(color), cgoAllocsUnknown
	C.vehicle_set_dashboard_color(cv, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_tire_smoke_color function as declared in out/capi.h:1194
func Vehicle_set_tire_smoke_color(v unsafe.Pointer, r uint32, g uint32, b uint32, a uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cr, crAllocMap := (C.uint)(r), cgoAllocsUnknown
	cg, cgAllocMap := (C.uint)(g), cgoAllocsUnknown
	cb, cbAllocMap := (C.uint)(b), cgoAllocsUnknown
	ca, caAllocMap := (C.uint)(a), cgoAllocsUnknown
	C.vehicle_set_tire_smoke_color(cv, cr, cg, cb, ca)
	runtime.KeepAlive(caAllocMap)
	runtime.KeepAlive(cbAllocMap)
	runtime.KeepAlive(cgAllocMap)
	runtime.KeepAlive(crAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_wheels function as declared in out/capi.h:1195
func Vehicle_set_wheels(v unsafe.Pointer, _type uint32, variation uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	c_type, c_typeAllocMap := (C.uint)(_type), cgoAllocsUnknown
	cvariation, cvariationAllocMap := (C.uint)(variation), cgoAllocsUnknown
	C.vehicle_set_wheels(cv, c_type, cvariation)
	runtime.KeepAlive(cvariationAllocMap)
	runtime.KeepAlive(c_typeAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_rear_wheels function as declared in out/capi.h:1196
func Vehicle_set_rear_wheels(v unsafe.Pointer, variation uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cvariation, cvariationAllocMap := (C.uint)(variation), cgoAllocsUnknown
	C.vehicle_set_rear_wheels(cv, cvariation)
	runtime.KeepAlive(cvariationAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_custom_tires function as declared in out/capi.h:1197
func Vehicle_set_custom_tires(v unsafe.Pointer, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_custom_tires(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_special_darkness function as declared in out/capi.h:1198
func Vehicle_set_special_darkness(v unsafe.Pointer, value uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cvalue, cvalueAllocMap := (C.uint)(value), cgoAllocsUnknown
	C.vehicle_set_special_darkness(cv, cvalue)
	runtime.KeepAlive(cvalueAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_numberplate_index function as declared in out/capi.h:1199
func Vehicle_set_numberplate_index(v unsafe.Pointer, index uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cindex, cindexAllocMap := (C.uint)(index), cgoAllocsUnknown
	C.vehicle_set_numberplate_index(cv, cindex)
	runtime.KeepAlive(cindexAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_numberplate_text function as declared in out/capi.h:1200
func Vehicle_set_numberplate_text(v unsafe.Pointer, text string) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ctext, ctextAllocMap := unpackPCharString(text)
	C.vehicle_set_numberplate_text(cv, ctext)
	runtime.KeepAlive(ctextAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_window_tint function as declared in out/capi.h:1201
func Vehicle_set_window_tint(v unsafe.Pointer, tint uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ctint, ctintAllocMap := (C.uint)(tint), cgoAllocsUnknown
	C.vehicle_set_window_tint(cv, ctint)
	runtime.KeepAlive(ctintAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_dirt_level function as declared in out/capi.h:1202
func Vehicle_set_dirt_level(v unsafe.Pointer, level uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	clevel, clevelAllocMap := (C.uint)(level), cgoAllocsUnknown
	C.vehicle_set_dirt_level(cv, clevel)
	runtime.KeepAlive(clevelAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_neon_active function as declared in out/capi.h:1203
func Vehicle_set_neon_active(v unsafe.Pointer, left int32, right int32, front int32, back int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cleft, cleftAllocMap := (C.int)(left), cgoAllocsUnknown
	cright, crightAllocMap := (C.int)(right), cgoAllocsUnknown
	cfront, cfrontAllocMap := (C.int)(front), cgoAllocsUnknown
	cback, cbackAllocMap := (C.int)(back), cgoAllocsUnknown
	C.vehicle_set_neon_active(cv, cleft, cright, cfront, cback)
	runtime.KeepAlive(cbackAllocMap)
	runtime.KeepAlive(cfrontAllocMap)
	runtime.KeepAlive(crightAllocMap)
	runtime.KeepAlive(cleftAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_neon_color function as declared in out/capi.h:1204
func Vehicle_set_neon_color(v unsafe.Pointer, r uint32, g uint32, b uint32, a uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cr, crAllocMap := (C.uint)(r), cgoAllocsUnknown
	cg, cgAllocMap := (C.uint)(g), cgoAllocsUnknown
	cb, cbAllocMap := (C.uint)(b), cgoAllocsUnknown
	ca, caAllocMap := (C.uint)(a), cgoAllocsUnknown
	C.vehicle_set_neon_color(cv, cr, cg, cb, ca)
	runtime.KeepAlive(caAllocMap)
	runtime.KeepAlive(cbAllocMap)
	runtime.KeepAlive(cgAllocMap)
	runtime.KeepAlive(crAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_livery function as declared in out/capi.h:1205
func Vehicle_set_livery(v unsafe.Pointer, livery uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	clivery, cliveryAllocMap := (C.uint)(livery), cgoAllocsUnknown
	C.vehicle_set_livery(cv, clivery)
	runtime.KeepAlive(cliveryAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_roof_livery function as declared in out/capi.h:1206
func Vehicle_set_roof_livery(v unsafe.Pointer, roofLivery uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	croofLivery, croofLiveryAllocMap := (C.uint)(roofLivery), cgoAllocsUnknown
	C.vehicle_set_roof_livery(cv, croofLivery)
	runtime.KeepAlive(croofLiveryAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_load_appearance_data_from_base64 function as declared in out/capi.h:1207
func Vehicle_load_appearance_data_from_base64(v unsafe.Pointer, base64 string) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cbase64, cbase64AllocMap := unpackPCharString(base64)
	C.vehicle_load_appearance_data_from_base64(cv, cbase64)
	runtime.KeepAlive(cbase64AllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_engine_on function as declared in out/capi.h:1208
func Vehicle_set_engine_on(v unsafe.Pointer, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_engine_on(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_headlight_color function as declared in out/capi.h:1209
func Vehicle_set_headlight_color(v unsafe.Pointer, color uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccolor, ccolorAllocMap := (C.uint)(color), cgoAllocsUnknown
	C.vehicle_set_headlight_color(cv, ccolor)
	runtime.KeepAlive(ccolorAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_radio_station_index function as declared in out/capi.h:1210
func Vehicle_set_radio_station_index(v unsafe.Pointer, stationIndex uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstationIndex, cstationIndexAllocMap := (C.uint)(stationIndex), cgoAllocsUnknown
	C.vehicle_set_radio_station_index(cv, cstationIndex)
	runtime.KeepAlive(cstationIndexAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_siren_active function as declared in out/capi.h:1211
func Vehicle_set_siren_active(v unsafe.Pointer, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_siren_active(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_lock_state function as declared in out/capi.h:1212
func Vehicle_set_lock_state(v unsafe.Pointer, state uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.uint)(state), cgoAllocsUnknown
	C.vehicle_set_lock_state(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_door_state function as declared in out/capi.h:1213
func Vehicle_set_door_state(v unsafe.Pointer, doorId uint32, state uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cdoorId, cdoorIdAllocMap := (C.uint)(doorId), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.uint)(state), cgoAllocsUnknown
	C.vehicle_set_door_state(cv, cdoorId, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cdoorIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_window_opened function as declared in out/capi.h:1214
func Vehicle_set_window_opened(v unsafe.Pointer, windowId uint32, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwindowId, cwindowIdAllocMap := (C.uint)(windowId), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_window_opened(cv, cwindowId, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cwindowIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_roof_state function as declared in out/capi.h:1215
func Vehicle_set_roof_state(v unsafe.Pointer, state uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.uint)(state), cgoAllocsUnknown
	C.vehicle_set_roof_state(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_lights_multiplier function as declared in out/capi.h:1216
func Vehicle_set_lights_multiplier(v unsafe.Pointer, multiplier float32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cmultiplier, cmultiplierAllocMap := (C.float)(multiplier), cgoAllocsUnknown
	C.vehicle_set_lights_multiplier(cv, cmultiplier)
	runtime.KeepAlive(cmultiplierAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_engine_health function as declared in out/capi.h:1217
func Vehicle_set_engine_health(v unsafe.Pointer, health uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	chealth, chealthAllocMap := (C.ulong)(health), cgoAllocsUnknown
	C.vehicle_set_engine_health(cv, chealth)
	runtime.KeepAlive(chealthAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_petrol_tank_health function as declared in out/capi.h:1218
func Vehicle_set_petrol_tank_health(v unsafe.Pointer, health uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	chealth, chealthAllocMap := (C.ulong)(health), cgoAllocsUnknown
	C.vehicle_set_petrol_tank_health(cv, chealth)
	runtime.KeepAlive(chealthAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_wheel_burst function as declared in out/capi.h:1219
func Vehicle_set_wheel_burst(v unsafe.Pointer, wheelId uint32, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_wheel_burst(cv, cwheelId, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_wheel_has_tire function as declared in out/capi.h:1220
func Vehicle_set_wheel_has_tire(v unsafe.Pointer, wheelId uint32, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_wheel_has_tire(cv, cwheelId, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_wheel_detached function as declared in out/capi.h:1221
func Vehicle_set_wheel_detached(v unsafe.Pointer, wheelId uint32, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_wheel_detached(cv, cwheelId, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_wheel_on_fire function as declared in out/capi.h:1222
func Vehicle_set_wheel_on_fire(v unsafe.Pointer, wheelId uint32, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_wheel_on_fire(cv, cwheelId, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_wheel_health function as declared in out/capi.h:1223
func Vehicle_set_wheel_health(v unsafe.Pointer, wheelId uint32, health float32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	chealth, chealthAllocMap := (C.float)(health), cgoAllocsUnknown
	C.vehicle_set_wheel_health(cv, cwheelId, chealth)
	runtime.KeepAlive(chealthAllocMap)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_wheel_fixed function as declared in out/capi.h:1224
func Vehicle_set_wheel_fixed(v unsafe.Pointer, wheelId uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwheelId, cwheelIdAllocMap := (C.uint)(wheelId), cgoAllocsUnknown
	C.vehicle_set_wheel_fixed(cv, cwheelId)
	runtime.KeepAlive(cwheelIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_body_health function as declared in out/capi.h:1225
func Vehicle_set_body_health(v unsafe.Pointer, health uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	chealth, chealthAllocMap := (C.ulong)(health), cgoAllocsUnknown
	C.vehicle_set_body_health(cv, chealth)
	runtime.KeepAlive(chealthAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_body_additional_health function as declared in out/capi.h:1226
func Vehicle_set_body_additional_health(v unsafe.Pointer, health uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	chealth, chealthAllocMap := (C.ulong)(health), cgoAllocsUnknown
	C.vehicle_set_body_additional_health(cv, chealth)
	runtime.KeepAlive(chealthAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_part_damage_level function as declared in out/capi.h:1227
func Vehicle_set_part_damage_level(v unsafe.Pointer, partId uint32, damage uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cpartId, cpartIdAllocMap := (C.uint)(partId), cgoAllocsUnknown
	cdamage, cdamageAllocMap := (C.uint)(damage), cgoAllocsUnknown
	C.vehicle_set_part_damage_level(cv, cpartId, cdamage)
	runtime.KeepAlive(cdamageAllocMap)
	runtime.KeepAlive(cpartIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_part_bullet_holes function as declared in out/capi.h:1228
func Vehicle_set_part_bullet_holes(v unsafe.Pointer, partId uint32, shootsCount uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cpartId, cpartIdAllocMap := (C.uint)(partId), cgoAllocsUnknown
	cshootsCount, cshootsCountAllocMap := (C.uint)(shootsCount), cgoAllocsUnknown
	C.vehicle_set_part_bullet_holes(cv, cpartId, cshootsCount)
	runtime.KeepAlive(cshootsCountAllocMap)
	runtime.KeepAlive(cpartIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_light_damaged function as declared in out/capi.h:1229
func Vehicle_set_light_damaged(v unsafe.Pointer, lightId uint32, isDamaged int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	clightId, clightIdAllocMap := (C.uint)(lightId), cgoAllocsUnknown
	cisDamaged, cisDamagedAllocMap := (C.int)(isDamaged), cgoAllocsUnknown
	C.vehicle_set_light_damaged(cv, clightId, cisDamaged)
	runtime.KeepAlive(cisDamagedAllocMap)
	runtime.KeepAlive(clightIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_window_damaged function as declared in out/capi.h:1230
func Vehicle_set_window_damaged(v unsafe.Pointer, windowId uint32, isDamaged int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwindowId, cwindowIdAllocMap := (C.uint)(windowId), cgoAllocsUnknown
	cisDamaged, cisDamagedAllocMap := (C.int)(isDamaged), cgoAllocsUnknown
	C.vehicle_set_window_damaged(cv, cwindowId, cisDamaged)
	runtime.KeepAlive(cisDamagedAllocMap)
	runtime.KeepAlive(cwindowIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_special_light_damaged function as declared in out/capi.h:1231
func Vehicle_set_special_light_damaged(v unsafe.Pointer, specialLightId uint32, isDamaged int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cspecialLightId, cspecialLightIdAllocMap := (C.uint)(specialLightId), cgoAllocsUnknown
	cisDamaged, cisDamagedAllocMap := (C.int)(isDamaged), cgoAllocsUnknown
	C.vehicle_set_special_light_damaged(cv, cspecialLightId, cisDamaged)
	runtime.KeepAlive(cisDamagedAllocMap)
	runtime.KeepAlive(cspecialLightIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_armored_window_health function as declared in out/capi.h:1232
func Vehicle_set_armored_window_health(v unsafe.Pointer, windowId uint32, health float32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwindowId, cwindowIdAllocMap := (C.uint)(windowId), cgoAllocsUnknown
	chealth, chealthAllocMap := (C.float)(health), cgoAllocsUnknown
	C.vehicle_set_armored_window_health(cv, cwindowId, chealth)
	runtime.KeepAlive(chealthAllocMap)
	runtime.KeepAlive(cwindowIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_armored_window_shoot_count function as declared in out/capi.h:1233
func Vehicle_set_armored_window_shoot_count(v unsafe.Pointer, windowId uint32, count uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cwindowId, cwindowIdAllocMap := (C.uint)(windowId), cgoAllocsUnknown
	ccount, ccountAllocMap := (C.uint)(count), cgoAllocsUnknown
	C.vehicle_set_armored_window_shoot_count(cv, cwindowId, ccount)
	runtime.KeepAlive(ccountAllocMap)
	runtime.KeepAlive(cwindowIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_bumper_damage_level function as declared in out/capi.h:1234
func Vehicle_set_bumper_damage_level(v unsafe.Pointer, bumperId uint32, damageLevel uint32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cbumperId, cbumperIdAllocMap := (C.uint)(bumperId), cgoAllocsUnknown
	cdamageLevel, cdamageLevelAllocMap := (C.uint)(damageLevel), cgoAllocsUnknown
	C.vehicle_set_bumper_damage_level(cv, cbumperId, cdamageLevel)
	runtime.KeepAlive(cdamageLevelAllocMap)
	runtime.KeepAlive(cbumperIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_manual_engine_control function as declared in out/capi.h:1235
func Vehicle_set_manual_engine_control(v unsafe.Pointer, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_manual_engine_control(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_load_damage_data_from_base64 function as declared in out/capi.h:1236
func Vehicle_load_damage_data_from_base64(v unsafe.Pointer, base64 string) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cbase64, cbase64AllocMap := unpackPCharString(base64)
	C.vehicle_load_damage_data_from_base64(cv, cbase64)
	runtime.KeepAlive(cbase64AllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_load_script_data_from_base64 function as declared in out/capi.h:1237
func Vehicle_load_script_data_from_base64(v unsafe.Pointer, base64 string) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cbase64, cbase64AllocMap := unpackPCharString(base64)
	C.vehicle_load_script_data_from_base64(cv, cbase64)
	runtime.KeepAlive(cbase64AllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_load_game_state_from_base64 function as declared in out/capi.h:1238
func Vehicle_load_game_state_from_base64(v unsafe.Pointer, base64 string) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cbase64, cbase64AllocMap := unpackPCharString(base64)
	C.vehicle_load_game_state_from_base64(cv, cbase64)
	runtime.KeepAlive(cbase64AllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_load_health_data_from_base64 function as declared in out/capi.h:1239
func Vehicle_load_health_data_from_base64(v unsafe.Pointer, base64 string) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cbase64, cbase64AllocMap := unpackPCharString(base64)
	C.vehicle_load_health_data_from_base64(cv, cbase64)
	runtime.KeepAlive(cbase64AllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_attached function as declared in out/capi.h:1240
func Vehicle_get_attached(v unsafe.Pointer) unsafe.Pointer {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_attached(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_get_attached_to function as declared in out/capi.h:1241
func Vehicle_get_attached_to(v unsafe.Pointer) unsafe.Pointer {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_attached_to(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_destroy function as declared in out/capi.h:1242
func Vehicle_destroy(v unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	C.vehicle_destroy(cv)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_is_valid function as declared in out/capi.h:1243
func Vehicle_is_valid(resourceName string, p unsafe.Pointer) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.vehicle_is_valid(cresourceName, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_get_streamed function as declared in out/capi.h:1244
func Vehicle_get_streamed(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_streamed(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_streamed function as declared in out/capi.h:1245
func Vehicle_set_streamed(v unsafe.Pointer, toggle int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ctoggle, ctoggleAllocMap := (C.int)(toggle), cgoAllocsUnknown
	C.vehicle_set_streamed(cv, ctoggle)
	runtime.KeepAlive(ctoggleAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_is_frozen function as declared in out/capi.h:1246
func Vehicle_is_frozen(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_frozen(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_frozen function as declared in out/capi.h:1247
func Vehicle_set_frozen(v unsafe.Pointer, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_frozen(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_has_collision function as declared in out/capi.h:1248
func Vehicle_has_collision(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_has_collision(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_collision function as declared in out/capi.h:1249
func Vehicle_set_collision(v unsafe.Pointer, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_collision(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_is_drift_mode function as declared in out/capi.h:1250
func Vehicle_is_drift_mode(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_drift_mode(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_drift_mode function as declared in out/capi.h:1251
func Vehicle_set_drift_mode(v unsafe.Pointer, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_drift_mode(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_is_train_mission_train function as declared in out/capi.h:1252
func Vehicle_is_train_mission_train(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_train_mission_train(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_mission_train function as declared in out/capi.h:1253
func Vehicle_set_train_mission_train(v unsafe.Pointer, value int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cvalue, cvalueAllocMap := (C.int)(value), cgoAllocsUnknown
	C.vehicle_set_train_mission_train(cv, cvalue)
	runtime.KeepAlive(cvalueAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_track_id function as declared in out/capi.h:1254
func Vehicle_get_train_track_id(v unsafe.Pointer) byte {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_track_id(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (byte)(__ret)
	return __v
}

// Vehicle_set_train_track_id function as declared in out/capi.h:1255
func Vehicle_set_train_track_id(v unsafe.Pointer, trackId byte) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ctrackId, ctrackIdAllocMap := (C.char)(trackId), cgoAllocsUnknown
	C.vehicle_set_train_track_id(cv, ctrackId)
	runtime.KeepAlive(ctrackIdAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_engine_id function as declared in out/capi.h:1256
func Vehicle_get_train_engine_id(v unsafe.Pointer) unsafe.Pointer {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_engine_id(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_train_engine_id function as declared in out/capi.h:1257
func Vehicle_set_train_engine_id(v unsafe.Pointer, e unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ce, ceAllocMap := e, cgoAllocsUnknown
	C.vehicle_set_train_engine_id(cv, ce)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_config_index function as declared in out/capi.h:1258
func Vehicle_get_train_config_index(v unsafe.Pointer) byte {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_config_index(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (byte)(__ret)
	return __v
}

// Vehicle_set_train_config_index function as declared in out/capi.h:1259
func Vehicle_set_train_config_index(v unsafe.Pointer, trainConfigIndex byte) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ctrainConfigIndex, ctrainConfigIndexAllocMap := (C.char)(trainConfigIndex), cgoAllocsUnknown
	C.vehicle_set_train_config_index(cv, ctrainConfigIndex)
	runtime.KeepAlive(ctrainConfigIndexAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_distance_from_engine function as declared in out/capi.h:1260
func Vehicle_get_train_distance_from_engine(v unsafe.Pointer) float32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_distance_from_engine(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Vehicle_set_train_distance_from_engine function as declared in out/capi.h:1261
func Vehicle_set_train_distance_from_engine(v unsafe.Pointer, distanceFromEngine float32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cdistanceFromEngine, cdistanceFromEngineAllocMap := (C.float)(distanceFromEngine), cgoAllocsUnknown
	C.vehicle_set_train_distance_from_engine(cv, cdistanceFromEngine)
	runtime.KeepAlive(cdistanceFromEngineAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_is_train_engine function as declared in out/capi.h:1262
func Vehicle_is_train_engine(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_train_engine(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_is_engine function as declared in out/capi.h:1263
func Vehicle_set_train_is_engine(v unsafe.Pointer, isEngine int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cisEngine, cisEngineAllocMap := (C.int)(isEngine), cgoAllocsUnknown
	C.vehicle_set_train_is_engine(cv, cisEngine)
	runtime.KeepAlive(cisEngineAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_is_train_caboose function as declared in out/capi.h:1264
func Vehicle_is_train_caboose(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_train_caboose(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_is_caboose function as declared in out/capi.h:1265
func Vehicle_set_train_is_caboose(v unsafe.Pointer, isCaboose int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cisCaboose, cisCabooseAllocMap := (C.int)(isCaboose), cgoAllocsUnknown
	C.vehicle_set_train_is_caboose(cv, cisCaboose)
	runtime.KeepAlive(cisCabooseAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_direction function as declared in out/capi.h:1266
func Vehicle_get_train_direction(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_direction(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_direction function as declared in out/capi.h:1267
func Vehicle_set_train_direction(v unsafe.Pointer, direction int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cdirection, cdirectionAllocMap := (C.int)(direction), cgoAllocsUnknown
	C.vehicle_set_train_direction(cv, cdirection)
	runtime.KeepAlive(cdirectionAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_has_train_passenger_carriages function as declared in out/capi.h:1268
func Vehicle_has_train_passenger_carriages(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_has_train_passenger_carriages(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_has_passenger_carriages function as declared in out/capi.h:1269
func Vehicle_set_train_has_passenger_carriages(v unsafe.Pointer, hasPassengerCarriages int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	chasPassengerCarriages, chasPassengerCarriagesAllocMap := (C.int)(hasPassengerCarriages), cgoAllocsUnknown
	C.vehicle_set_train_has_passenger_carriages(cv, chasPassengerCarriages)
	runtime.KeepAlive(chasPassengerCarriagesAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_render_derailed function as declared in out/capi.h:1270
func Vehicle_get_train_render_derailed(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_render_derailed(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_render_derailed function as declared in out/capi.h:1271
func Vehicle_set_train_render_derailed(v unsafe.Pointer, renderDerailed int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	crenderDerailed, crenderDerailedAllocMap := (C.int)(renderDerailed), cgoAllocsUnknown
	C.vehicle_set_train_render_derailed(cv, crenderDerailed)
	runtime.KeepAlive(crenderDerailedAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_force_doors_open function as declared in out/capi.h:1272
func Vehicle_get_train_force_doors_open(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_force_doors_open(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_force_doors_open function as declared in out/capi.h:1273
func Vehicle_set_train_force_doors_open(v unsafe.Pointer, forceDoorsOpen int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cforceDoorsOpen, cforceDoorsOpenAllocMap := (C.int)(forceDoorsOpen), cgoAllocsUnknown
	C.vehicle_set_train_force_doors_open(cv, cforceDoorsOpen)
	runtime.KeepAlive(cforceDoorsOpenAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_cruise_speed function as declared in out/capi.h:1274
func Vehicle_get_train_cruise_speed(v unsafe.Pointer) float32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_cruise_speed(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Vehicle_set_train_cruise_speed function as declared in out/capi.h:1275
func Vehicle_set_train_cruise_speed(v unsafe.Pointer, cruiseSpeed float32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccruiseSpeed, ccruiseSpeedAllocMap := (C.float)(cruiseSpeed), cgoAllocsUnknown
	C.vehicle_set_train_cruise_speed(cv, ccruiseSpeed)
	runtime.KeepAlive(ccruiseSpeedAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_carriage_config_index function as declared in out/capi.h:1276
func Vehicle_get_train_carriage_config_index(v unsafe.Pointer) byte {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_carriage_config_index(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (byte)(__ret)
	return __v
}

// Vehicle_set_train_carriage_config_index function as declared in out/capi.h:1277
func Vehicle_set_train_carriage_config_index(v unsafe.Pointer, carriageConfigIndex byte) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ccarriageConfigIndex, ccarriageConfigIndexAllocMap := (C.char)(carriageConfigIndex), cgoAllocsUnknown
	C.vehicle_set_train_carriage_config_index(cv, ccarriageConfigIndex)
	runtime.KeepAlive(ccarriageConfigIndexAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_linked_to_backward_id function as declared in out/capi.h:1278
func Vehicle_get_train_linked_to_backward_id(v unsafe.Pointer) unsafe.Pointer {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_linked_to_backward_id(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_train_linked_to_backward_id function as declared in out/capi.h:1279
func Vehicle_set_train_linked_to_backward_id(v unsafe.Pointer, e unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ce, ceAllocMap := e, cgoAllocsUnknown
	C.vehicle_set_train_linked_to_backward_id(cv, ce)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_linked_to_forward_id function as declared in out/capi.h:1280
func Vehicle_get_train_linked_to_forward_id(v unsafe.Pointer) unsafe.Pointer {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_linked_to_forward_id(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *(*unsafe.Pointer)(unsafe.Pointer(&__ret))
	return __v
}

// Vehicle_set_train_linked_to_forward_id function as declared in out/capi.h:1281
func Vehicle_set_train_linked_to_forward_id(v unsafe.Pointer, e unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	ce, ceAllocMap := e, cgoAllocsUnknown
	C.vehicle_set_train_linked_to_forward_id(cv, ce)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_train_unk1 function as declared in out/capi.h:1282
func Vehicle_set_train_unk1(v unsafe.Pointer, unk1 int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cunk1, cunk1AllocMap := (C.int)(unk1), cgoAllocsUnknown
	C.vehicle_set_train_unk1(cv, cunk1)
	runtime.KeepAlive(cunk1AllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_unk1 function as declared in out/capi.h:1283
func Vehicle_get_train_unk1(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_unk1(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_unk2 function as declared in out/capi.h:1284
func Vehicle_set_train_unk2(v unsafe.Pointer, unk2 int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cunk2, cunk2AllocMap := (C.int)(unk2), cgoAllocsUnknown
	C.vehicle_set_train_unk2(cv, cunk2)
	runtime.KeepAlive(cunk2AllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_unk2 function as declared in out/capi.h:1285
func Vehicle_get_train_unk2(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_unk2(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_train_unk3 function as declared in out/capi.h:1286
func Vehicle_set_train_unk3(v unsafe.Pointer, unk3 int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cunk3, cunk3AllocMap := (C.int)(unk3), cgoAllocsUnknown
	C.vehicle_set_train_unk3(cv, cunk3)
	runtime.KeepAlive(cunk3AllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_get_train_unk3 function as declared in out/capi.h:1287
func Vehicle_get_train_unk3(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_get_train_unk3(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_is_boat_anchor_active function as declared in out/capi.h:1288
func Vehicle_is_boat_anchor_active(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.vehicle_is_boat_anchor_active(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Vehicle_set_boat_anchor_active function as declared in out/capi.h:1289
func Vehicle_set_boat_anchor_active(v unsafe.Pointer, state int32) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	C.vehicle_set_boat_anchor_active(cv, cstate)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Vehicle_set_search_light function as declared in out/capi.h:1290
func Vehicle_set_search_light(v unsafe.Pointer, state int32, e Entity) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cstate, cstateAllocMap := (C.int)(state), cgoAllocsUnknown
	ce, ceAllocMap := e.PassValue()
	__ret := C.vehicle_set_search_light(cv, cstate, ce)
	runtime.KeepAlive(ceAllocMap)
	runtime.KeepAlive(cstateAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Voice_channel_is_valid function as declared in out/capi.h:1313
func Voice_channel_is_valid(resourceName string, p unsafe.Pointer) int32 {
	cresourceName, cresourceNameAllocMap := unpackPCharString(resourceName)
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.voice_channel_is_valid(cresourceName, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cresourceNameAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Voice_channel_get_type function as declared in out/capi.h:1314
func Voice_channel_get_type(c unsafe.Pointer) int32 {
	cc, ccAllocMap := c, cgoAllocsUnknown
	__ret := C.voice_channel_get_type(cc)
	runtime.KeepAlive(ccAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Voice_channel_has_meta_data function as declared in out/capi.h:1315
func Voice_channel_has_meta_data(base unsafe.Pointer, key string) int32 {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.voice_channel_has_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Voice_channel_get_meta_data function as declared in out/capi.h:1316
func Voice_channel_get_meta_data(base unsafe.Pointer, key string) Array {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	__ret := C.voice_channel_get_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}

// Voice_channel_set_meta_data function as declared in out/capi.h:1317
func Voice_channel_set_meta_data(base unsafe.Pointer, key string, data []byte, size uint64) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	cdata, cdataAllocMap := copyPUcharBytes((*sliceHeader)(unsafe.Pointer(&data)))
	csize, csizeAllocMap := (C.ulonglong)(size), cgoAllocsUnknown
	C.voice_channel_set_meta_data(cbase, ckey, cdata, csize)
	runtime.KeepAlive(csizeAllocMap)
	runtime.KeepAlive(cdataAllocMap)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Voice_channel_delete_meta_data function as declared in out/capi.h:1318
func Voice_channel_delete_meta_data(base unsafe.Pointer, key string) {
	cbase, cbaseAllocMap := base, cgoAllocsUnknown
	ckey, ckeyAllocMap := unpackPCharString(key)
	C.voice_channel_delete_meta_data(cbase, ckey)
	runtime.KeepAlive(ckeyAllocMap)
	runtime.KeepAlive(cbaseAllocMap)
}

// Voice_channel_destroy function as declared in out/capi.h:1319
func Voice_channel_destroy(b unsafe.Pointer) {
	cb, cbAllocMap := b, cgoAllocsUnknown
	C.voice_channel_destroy(cb)
	runtime.KeepAlive(cbAllocMap)
}

// Voice_channel_is_spatial function as declared in out/capi.h:1320
func Voice_channel_is_spatial(v unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.voice_channel_is_spatial(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Voice_channel_get_max_distance function as declared in out/capi.h:1321
func Voice_channel_get_max_distance(v unsafe.Pointer) float32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.voice_channel_get_max_distance(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (float32)(__ret)
	return __v
}

// Voice_channel_has_player function as declared in out/capi.h:1322
func Voice_channel_has_player(v unsafe.Pointer, p unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.voice_channel_has_player(cv, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Voice_channel_add_player function as declared in out/capi.h:1323
func Voice_channel_add_player(v unsafe.Pointer, p unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.voice_channel_add_player(cv, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Voice_channel_remove_player function as declared in out/capi.h:1324
func Voice_channel_remove_player(v unsafe.Pointer, p unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.voice_channel_remove_player(cv, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Voice_channel_is_player_muted function as declared in out/capi.h:1325
func Voice_channel_is_player_muted(v unsafe.Pointer, p unsafe.Pointer) int32 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cp, cpAllocMap := p, cgoAllocsUnknown
	__ret := C.voice_channel_is_player_muted(cv, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cvAllocMap)
	__v := (int32)(__ret)
	return __v
}

// Voice_channel_mute_player function as declared in out/capi.h:1326
func Voice_channel_mute_player(v unsafe.Pointer, p unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.voice_channel_mute_player(cv, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Voice_channel_unmute_player function as declared in out/capi.h:1327
func Voice_channel_unmute_player(v unsafe.Pointer, p unsafe.Pointer) {
	cv, cvAllocMap := v, cgoAllocsUnknown
	cp, cpAllocMap := p, cgoAllocsUnknown
	C.voice_channel_unmute_player(cv, cp)
	runtime.KeepAlive(cpAllocMap)
	runtime.KeepAlive(cvAllocMap)
}

// Voice_channel_get_player_count function as declared in out/capi.h:1328
func Voice_channel_get_player_count(v unsafe.Pointer) uint64 {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.voice_channel_get_player_count(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := (uint64)(__ret)
	return __v
}

// Voice_channel_get_players function as declared in out/capi.h:1329
func Voice_channel_get_players(v unsafe.Pointer) Array {
	cv, cvAllocMap := v, cgoAllocsUnknown
	__ret := C.voice_channel_get_players(cv)
	runtime.KeepAlive(cvAllocMap)
	__v := *NewArrayRef(unsafe.Pointer(&__ret))
	return __v
}
